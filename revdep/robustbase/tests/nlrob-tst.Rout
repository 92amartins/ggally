
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(robustbase)
> 
> source(system.file("test-tools-1.R",  package = "Matrix", mustWork=TRUE))
Loading required package: tools
> ## -> assert.EQ(), identical3(), ..
> 
> DNase1 <- DNase[ DNase$Run == 1, ]
> Y <- DNase1[,"density"] # for convenience below
> 
> ## classical
> fm1 <- nls(density ~ Asym/(1 + exp(( xmid - log(conc) )/scal ) ),
+ 	   data = DNase1, start = list(Asym = 3, xmid = 0, scal = 1), trace=TRUE)
14.32279 :  3 0 1
0.4542698 :  2.1152456 0.8410193 1.2000640
0.05869603 :  2.446376 1.747516 1.189515
0.005663524 :  2.294087 1.412198 1.020463
0.004791528 :  2.341429 1.479688 1.040758
0.004789569 :  2.345135 1.483047 1.041439
0.004789569 :  2.345179 1.483089 1.041454
> summary(fm1)

Formula: density ~ Asym/(1 + exp((xmid - log(conc))/scal))

Parameters:
     Estimate Std. Error t value Pr(>|t|)    
Asym  2.34518    0.07815   30.01 2.17e-13 ***
xmid  1.48309    0.08135   18.23 1.22e-10 ***
scal  1.04145    0.03227   32.27 8.51e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.01919 on 13 degrees of freedom

Number of iterations to convergence: 6 
Achieved convergence tolerance: 1.989e-06

> wm1 <- update(fm1, weights = sqrt(conc)) # (weights as function of <var>)
27.10073 :  3 0 1
0.600802 :  2.1823367 0.8948353 1.2614653
0.1716286 :  2.510890 1.828486 1.208884
0.01052871 :  2.282185 1.401035 1.024226
0.008359719 :  2.359573 1.499564 1.050668
0.008322484 :  2.367424 1.506046 1.052066
0.008322479 :  2.367618 1.506233 1.052148
0.008322479 :  2.367622 1.506237 1.052150
> 
> ## robust
> rm1 <- nlrob(formula(fm1), data = DNase1, trace = TRUE,
+ 	     start = list(Asym = 3, xmid = 0, scal = 1))
robust iteration 1 
14.32279 :  3 0 1
0.4542698 :  2.1152456 0.8410193 1.2000640
0.05869603 :  2.446376 1.747516 1.189515
0.005663524 :  2.294087 1.412198 1.020463
0.004791528 :  2.341429 1.479688 1.040758
0.004789569 :  2.345135 1.483047 1.041439
0.004789569 :  2.345179 1.483089 1.041454
 --> irls.delta(previous, resid) = 0.999803 -- *not* converged
robust iteration 2 
0.003971483 :  2.345179 1.483089 1.041454
0.003954569 :  2.356445 1.495544 1.043788
0.003954565 :  2.356586 1.495650 1.043815
 --> irls.delta(previous, resid) = 0.0614628 -- *not* converged
robust iteration 3 
0.003934724 :  2.356586 1.495650 1.043815
0.00393411 :  2.358633 1.498205 1.044647
0.00393411 :  2.358657 1.498229 1.044655
 --> irls.delta(previous, resid) = 0.0121515 -- *not* converged
robust iteration 4 
0.003930685 :  2.358657 1.498229 1.044655
0.00393062 :  2.359307 1.499046 1.044928
0.00393062 :  2.359314 1.499053 1.044931
 --> irls.delta(previous, resid) = 0.00395053 -- *not* converged
robust iteration 5 
0.00392958 :  2.359314 1.499053 1.044931
0.003929573 :  2.359525 1.499320 1.045020
 --> irls.delta(previous, resid) = 0.00128458 -- *not* converged
robust iteration 6 
0.003929244 :  2.359525 1.499320 1.045020
0.003929244 :  2.359596 1.499409 1.045050
 --> irls.delta(previous, resid) = 0.000422992 -- *not* converged
robust iteration 7 
0.003929132 :  2.359596 1.499409 1.045050
0.003929132 :  2.359620 1.499438 1.045060
 --> irls.delta(previous, resid) = 0.000139347 -- *not* converged
robust iteration 8 
0.003929095 :  2.359620 1.499438 1.045060
0.003929095 :  2.359628 1.499448 1.045063
 --> irls.delta(previous, resid) = 4.58494e-05 -- *not* converged
robust iteration 9 
0.003929083 :  2.359628 1.499448 1.045063
0.003929083 :  2.359630 1.499451 1.045064
 --> irls.delta(previous, resid) = 1.51142e-05 -- *not* converged
robust iteration 10 
0.003929079 :  2.359630 1.499451 1.045064
> (sm1 <- summary(rm1))

Call:
nlrob(formula = formula(fm1), data = DNase1, start = list(Asym = 3, 
    xmid = 0, scal = 1), trace = TRUE)

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0322811 -0.0130976 -0.0008932  0.0095784  0.0404174 

Parameters:
     Estimate Std. Error t value Pr(>|t|)    
Asym  2.35963    0.08627   27.35 7.10e-13 ***
xmid  1.49945    0.09022   16.62 3.87e-10 ***
scal  1.04506    0.03504   29.83 2.34e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Robust residual standard error: 0.01829 
Convergence in 10 IRWLS iterations

Robustness weights: 
 14 weights are ~= 1. The remaining 2 ones are
    11     13 
0.6087 0.7621 
> stopifnot(all.equal(Y, fitted(fm1) + residuals(fm1), check.attributes=FALSE),
+ 	  ## fitted(<nls>) has "label" attribute
+ 	  identical3(c(fitted(fm1)), predict(fm1), predict(fm1, newdata=DNase1)),
+ 	  ## robust fit :
+ 	  identical3(fitted(rm1), predict(rm1), predict(rm1, newdata=DNase1)),
+ 	  all.equal(Y, unname(fitted(rm1) + residuals(rm1))))
> print(coef(rm1), digits=12)
         Asym          xmid          scal 
2.35963008460 1.49945088410 1.04506391722 
> ## 2.35963008460 1.49945088410 1.04506391722	F19 Lx 64b
> ## 2.35963008460 1.49945088410 1.04506391722	Win(Serv.2003) 64b
> ## 2.35963008613 1.49945088600 1.04506391793	F19 Lx 32b
> ## 2.35963008613 1.49945088600 1.04506391793	Win(Serv.2003) 32b
> assert.EQ(coef(rm1), giveRE=TRUE,
+ 	  c(Asym=2.35963008, xmid=1.49945088, scal=1.04506392), tol = 4e-8)
Mean relative difference: 2.339889e-09
> assert.EQ(sqrt(diag(sm1$cov)), giveRE=TRUE,
+ 	  ## 32b 0.08626872273,     0.0902194541,      0.03503833759
+ 	  c(Asym=0.0862687305, xmid=0.0902194608, scal=0.0350383389),
+ 	  tol = 7e-7)
Mean relative difference: 3.391354e-10
> ## examples with weights:
> rm. <- update(rm1, weights = NULL)# 'NULL' but not missing()
robust iteration 1 
14.32279 :  3 0 1
0.4542698 :  2.1152456 0.8410193 1.2000640
0.05869603 :  2.446376 1.747516 1.189515
0.005663524 :  2.294087 1.412198 1.020463
0.004791528 :  2.341429 1.479688 1.040758
0.004789569 :  2.345135 1.483047 1.041439
0.004789569 :  2.345179 1.483089 1.041454
 --> irls.delta(previous, resid) = 0.999803 -- *not* converged
robust iteration 2 
0.003971483 :  2.345179 1.483089 1.041454
0.003954569 :  2.356445 1.495544 1.043788
0.003954565 :  2.356586 1.495650 1.043815
 --> irls.delta(previous, resid) = 0.0614628 -- *not* converged
robust iteration 3 
0.003934724 :  2.356586 1.495650 1.043815
0.00393411 :  2.358633 1.498205 1.044647
0.00393411 :  2.358657 1.498229 1.044655
 --> irls.delta(previous, resid) = 0.0121515 -- *not* converged
robust iteration 4 
0.003930685 :  2.358657 1.498229 1.044655
0.00393062 :  2.359307 1.499046 1.044928
0.00393062 :  2.359314 1.499053 1.044931
 --> irls.delta(previous, resid) = 0.00395053 -- *not* converged
robust iteration 5 
0.00392958 :  2.359314 1.499053 1.044931
0.003929573 :  2.359525 1.499320 1.045020
 --> irls.delta(previous, resid) = 0.00128458 -- *not* converged
robust iteration 6 
0.003929244 :  2.359525 1.499320 1.045020
0.003929244 :  2.359596 1.499409 1.045050
 --> irls.delta(previous, resid) = 0.000422992 -- *not* converged
robust iteration 7 
0.003929132 :  2.359596 1.499409 1.045050
0.003929132 :  2.359620 1.499438 1.045060
 --> irls.delta(previous, resid) = 0.000139347 -- *not* converged
robust iteration 8 
0.003929095 :  2.359620 1.499438 1.045060
0.003929095 :  2.359628 1.499448 1.045063
 --> irls.delta(previous, resid) = 4.58494e-05 -- *not* converged
robust iteration 9 
0.003929083 :  2.359628 1.499448 1.045063
0.003929083 :  2.359630 1.499451 1.045064
 --> irls.delta(previous, resid) = 1.51142e-05 -- *not* converged
robust iteration 10 
0.003929079 :  2.359630 1.499451 1.045064
> ww <- sqrt(DNase1[,"conc"])
> wr1  <- update(rm1, weights = sqrt(conc), trace=FALSE)
> wr1. <- update(rm1, weights = ww,         trace=FALSE)
> ii <- names(rm1) != "call"
> stopifnot(all.equal(rm1[ii], rm.[ii], tol = 1e-15),
+           all.equal(wr1[ii],wr1.[ii], tol = 1e-15))
> 
> 
> ## From: "Pascal A. Niklaus" <pascal.niklaus@ieu.uzh.ch>
> ## To: <maechler@stat.math.ethz.ch>
> ## Subject: nlrob problem
> ## Date: Tue, 20 Dec 2011 07:04:38 +0100
> 
> ## For psi-functions that can become zero (e.g. psi.bisquare), weights in
> ## the internal call to nls can become zero.
> 
> 
> ## Was
> ## psiTuk  <- robustbase:::psi.bisquare
> ## psiHamp <- robustbase:::psi.hampel
> 
> lmrob.control(psi="bisquare")$tuning.psi
[1] 4.685061
> psiTuk <- function(x, der=0) {
+     ## cc:  dput( lmrob.control(psi="bisquare")$tuning.psi )
+     if(der == 0)
+         Mwgt(x, cc=4.685061, psi="Tukey")
+     else
+         Mpsi(x, cc=4.685061, psi="Tukey", deriv=1)
+ }
> 
> c.Ha <- lmrob.control(psi="hampel"); c.Ha$tuning.psi
[1] 1.352413 3.155630 7.212868
> psiHamp <- function(x, der=0) {
+     ## cc: dput( lmrob.control(psi="hampel")$tuning.psi )
+     if(der == 0)
+ 	Mwgt(x, cc=c(1.35241275, 3.15562975, 7.212868), psi="Hampel")
+     else
+ 	Mpsi(x, cc=c(1.35241275, 3.15562975, 7.212868), psi="Hampel", deriv=1)
+ }
> 
> d <- data.frame(x = -6:9,
+                 y = 43 + c(7, 52, 21, 12, 10, -4, -5, -4, 0, -77, -8, -10, 22, 33, 38, 51))
> nlr1 <- nlrob(y ~ a*(x + b*exp(-c*x)), start=list(a= 4, b= 1, c= 1.2),
+               data = d,
+               maxit = 50, # default 20 is *not* sufficient
+               trace=TRUE)
robust iteration 1 
647679.7 :  4.0 1.0 1.2
189112.5 :   9.195522 -0.399165  1.050113
98995.28 :  9.2857529 0.1707392 1.2031395
16121.01 :  9.1913644 0.3840144 0.8301526
12197.17 :  9.3500241 1.0029839 0.4775526
10178.3 :  9.1393170 2.2459227 0.2603096
8164.592 :  9.1930812 3.0490042 0.4206007
6638.982 :  8.7814935 3.6708336 0.3072424
6611.493 :  8.841148 3.353259 0.331349
6608.502 :  8.7582899 3.4831233 0.3206617
6607.89 :  8.7884653 3.4301090 0.3256271
6607.759 :  8.7732294 3.4560084 0.3233241
6607.731 :  8.7800260 3.4442320 0.3243899
6607.725 :  8.7768231 3.4497356 0.3238964
6607.724 :  8.7782937 3.4471985 0.3241249
6607.724 :  8.7776104 3.4483753 0.3240191
6607.724 :  8.7779262 3.4478311 0.3240681
6607.724 :  8.7777799 3.4480831 0.3240454
6607.724 :  8.7778475 3.4479664 0.3240559
6607.724 :  8.777816 3.448020 0.324051
 --> irls.delta(previous, resid) = 0.980105 -- *not* converged
robust iteration 2 
5340.496 :  8.777816 3.448020 0.324051
3676.395 :  8.752698 4.401561 0.232443
3626.766 :  8.7320402 4.2099261 0.2480097
3625.628 :  8.6756506 4.2850077 0.2446748
3625.577 :  8.6847995 4.2707850 0.2453872
3625.575 :  8.6827192 4.2740106 0.2452358
3625.575 :  8.683156 4.273332 0.245268
3625.575 :  8.6830625 4.2734767 0.2452612
 --> irls.delta(previous, resid) = 0.436553 -- *not* converged
robust iteration 3 
3071.609 :  8.6830625 4.2734767 0.2452612
3033.045 :  8.7165999 4.4637660 0.2310233
3032.134 :  8.7490269 4.4059165 0.2338778
3032.1 :  8.7402441 4.4188590 0.2333154
3032.099 :  8.7418783 4.4164153 0.2334265
3032.099 :  8.7415518 4.4169029 0.2334046
3032.099 :  8.7416161 4.4168069 0.2334089
 --> irls.delta(previous, resid) = 0.074586 -- *not* converged
robust iteration 4 
2591.692 :  8.7416161 4.4168069 0.2334089
2584.457 :  8.8423779 4.4310443 0.2302787
2584.421 :  8.8503980 4.4187016 0.2308676
2584.42 :  8.8487811 4.4210625 0.2307598
2584.42 :  8.8490734 4.4206347 0.2307795
2584.42 :  8.8490197 4.4207133 0.2307759
 --> irls.delta(previous, resid) = 0.0291833 -- *not* converged
robust iteration 5 
2173.948 :  8.8490197 4.4207133 0.2307759
2169.635 :  8.9521069 4.4070641 0.2296879
2169.631 :  8.9547401 4.4033853 0.2298785
2169.631 :  8.9542666 4.4040649 0.2298461
2169.631 :  8.9543468 4.4039497 0.2298516
 --> irls.delta(previous, resid) = 0.0217691 -- *not* converged
robust iteration 6 
1847.9 :  8.9543468 4.4039497 0.2298516
1845.344 :  9.0432331 4.3829819 0.2299199
1845.344 :  9.0430788 4.3834068 0.2299088
1845.344 :  9.0431040 4.3833710 0.2299105
 --> irls.delta(previous, resid) = 0.0169571 -- *not* converged
robust iteration 7 
1674.072 :  9.0431040 4.3833710 0.2299105
1673.299 :  9.1013767 4.3556379 0.2308565
1673.297 :  9.0993319 4.3586665 0.2307111
1673.297 :  9.099638 4.358233 0.230733
1673.297 :  9.0995919 4.3582987 0.2307297
 --> irls.delta(previous, resid) = 0.0101474 -- *not* converged
robust iteration 8 
1583.914 :  9.0995919 4.3582987 0.2307297
1583.649 :  9.1349725 4.3356518 0.2317212
1583.647 :  9.1329124 4.3386090 0.2315746
1583.647 :  9.133209 4.338189 0.231596
1583.647 :  9.1331654 4.3382510 0.2315929
 --> irls.delta(previous, resid) = 0.00676311 -- *not* converged
robust iteration 9 
1538.119 :  9.1331654 4.3382510 0.2315929
1538.018 :  9.1533331 4.3237119 0.2323299
1538.017 :  9.1518487 4.3258209 0.2322233
1538.016 :  9.1520590 4.3255231 0.2322386
1538.016 :  9.1520287 4.3255659 0.2322364
 --> irls.delta(previous, resid) = 0.0046438 -- *not* converged
robust iteration 10 
1512.6 :  9.1520287 4.3255659 0.2322364
1512.556 :  9.1642221 4.3162359 0.2327531
1512.555 :  9.1632035 4.3176796 0.2326794
1512.555 :  9.1633466 4.3174767 0.2326899
1512.555 :  9.1633263 4.3175055 0.2326884
 --> irls.delta(previous, resid) = 0.00324717 -- *not* converged
robust iteration 11 
1496.839 :  9.1633263 4.3175055 0.2326884
1496.818 :  9.1712189 4.3112958 0.2330487
1496.818 :  9.1705189 4.3122877 0.2329978
1496.818 :  9.170617 4.312149 0.233005
 --> irls.delta(previous, resid) = 0.0022863 -- *not* converged
robust iteration 12 
1486.42 :  9.170617 4.312149 0.233005
1486.409 :  9.1759430 4.3079158 0.2332563
1486.409 :  9.1754597 4.3086010 0.2332211
1486.409 :  9.175527 4.308506 0.233226
 --> irls.delta(previous, resid) = 0.00160615 -- *not* converged
robust iteration 13 
1479.278 :  9.175527 4.308506 0.233226
1479.273 :  9.1792106 4.3055663 0.2334022
1479.273 :  9.1788742 4.3060434 0.2333776
1479.273 :  9.178921 4.305977 0.233381
 --> irls.delta(previous, resid) = 0.00112928 -- *not* converged
robust iteration 14 
1474.308 :  9.178921 4.305977 0.233381
1474.305 :  9.1814937 4.3039212 0.2335047
1474.305 :  9.1812587 4.3042546 0.2334875
1474.305 :  9.1812913 4.3042084 0.2334899
 --> irls.delta(previous, resid) = 0.000794068 -- *not* converged
robust iteration 15 
1470.829 :  9.1812913 4.3042084 0.2334899
1470.828 :  9.1830950 4.3027662 0.2335769
1470.828 :  9.1829304 4.3029998 0.2335648
1470.828 :  9.1829532 4.3029674 0.2335665
 --> irls.delta(previous, resid) = 0.000558311 -- *not* converged
robust iteration 16 
1468.388 :  9.1829532 4.3029674 0.2335665
1468.388 :  9.1842195 4.3019546 0.2336276
1468.388 :  9.1841041 4.3021184 0.2336191
 --> irls.delta(previous, resid) = 0.000387351 -- *not* converged
robust iteration 17 
1466.67 :  9.1841041 4.3021184 0.2336191
1466.67 :  9.1850085 4.3013872 0.2336629
1466.67 :  9.1849259 4.3015045 0.2336568
 --> irls.delta(previous, resid) = 0.000274692 -- *not* converged
robust iteration 18 
1465.47 :  9.1849259 4.3015045 0.2336568
1465.469 :  9.1855618 4.3009878 0.2336879
1465.469 :  9.1855034 4.3010707 0.2336836
 --> irls.delta(previous, resid) = 0.000194038 -- *not* converged
robust iteration 19 
1464.629 :  9.1855034 4.3010707 0.2336836
1464.629 :  9.1859503 4.3007068 0.2337055
1464.629 :  9.1859091 4.3007653 0.2337024
 --> irls.delta(previous, resid) = 0.000136921 -- *not* converged
robust iteration 20 
1464.038 :  9.1859091 4.3007653 0.2337024
1464.038 :  9.1862237 4.3005089 0.2337179
1464.038 :  9.1861947 4.3005501 0.2337157
 --> irls.delta(previous, resid) = 9.65989e-05 -- *not* converged
robust iteration 21 
1463.621 :  9.1861947 4.3005501 0.2337157
1463.621 :  9.1864164 4.3003693 0.2337266
1463.621 :  9.1863959 4.3003984 0.2337251
 --> irls.delta(previous, resid) = 6.81362e-05 -- *not* converged
robust iteration 22 
1463.328 :  9.1863959 4.3003984 0.2337251
1463.328 :  9.1865522 4.3002710 0.2337328
 --> irls.delta(previous, resid) = 5.27898e-05 -- *not* converged
robust iteration 23 
1463.125 :  9.1865522 4.3002710 0.2337328
1463.125 :  9.1866491 4.3001989 0.2337374
 --> irls.delta(previous, resid) = 3.45521e-05 -- *not* converged
robust iteration 24 
1462.976 :  9.1866491 4.3001989 0.2337374
1462.976 :  9.1867183 4.3001488 0.2337406
 --> irls.delta(previous, resid) = 2.36532e-05 -- *not* converged
robust iteration 25 
1462.869 :  9.1867183 4.3001488 0.2337406
1462.869 :  9.1867673 4.3001138 0.2337428
 --> irls.delta(previous, resid) = 1.62808e-05 -- *not* converged
robust iteration 26 
1462.794 :  9.1867673 4.3001138 0.2337428
1462.794 :  9.1868015 4.3000895 0.2337443
 --> irls.delta(previous, resid) = 1.12093e-05 -- *not* converged
robust iteration 27 
1462.741 :  9.1868015 4.3000895 0.2337443
1462.741 :  9.1868251 4.3000726 0.2337453
 --> irls.delta(previous, resid) = 7.72288e-06 -- *not* converged
robust iteration 28 
1462.706 :  9.1868251 4.3000726 0.2337453
> ## These failed in robustbase version 0.8-0 and earlier
> nlr2  <- update(nlr1, psi = psiTuk) # now *does* converge...
robust iteration 1 
21784.8 :  4.0 1.0 1.2
8950.648 :  6.7941976 2.0770534 0.5341018
7423.278 :  9.0603007 3.8799160 0.2185499
6817.584 :  10.8242532  1.9388621  0.4933187
6182.649 :  9.0355560 3.1092441 0.3370087
5913.322 :  9.3287082 2.7613786 0.4451243
5879.573 :  9.0403013 3.1835980 0.3818531
5868.447 :  9.1436683 2.9567009 0.4148403
5866.159 :  9.0721779 3.0876342 0.3981463
5865.492 :  9.1028006 3.0241710 0.4068119
5865.329 :  9.0855964 3.0580337 0.4024024
5865.285 :  9.0939834 3.0410152 0.4046652
5865.274 :  9.0895865 3.0498082 0.4035098
5865.271 :  9.0918067 3.0453337 0.4041012
5865.27 :  9.0906639 3.0476279 0.4037989
5865.27 :  9.0912464 3.0464562 0.4039535
5865.27 :  9.0909480 3.0470558 0.4038745
5865.27 :  9.0911004 3.0467493 0.4039149
5865.27 :  9.0910225 3.0469060 0.4038942
5865.27 :  9.0910623 3.0468260 0.4039048
 --> irls.delta(previous, resid) = 0.959769 -- *not* converged
robust iteration 2 
2467.707 :  9.0910623 3.0468260 0.4039048
1141.196 :  9.4065185 3.9569611 0.2613981
1096.394 :  9.2483990 3.8745295 0.2786394
1096.039 :  9.2125454 3.9145075 0.2757742
1096.03 :  9.2167177 3.9085053 0.2762509
1096.03 :  9.2159775 3.9095523 0.2761716
1096.03 :  9.2160993 3.9093792 0.2761848
1096.03 :  9.2160790 3.9094080 0.2761826
 --> irls.delta(previous, resid) = 0.6203 -- *not* converged
robust iteration 3 
581.9377 :  9.2160790 3.9094080 0.2761826
536.2658 :  9.4545483 3.9421170 0.2660394
536.2357 :  9.4558289 3.9355670 0.2665224
536.2357 :  9.4555825 3.9359453 0.2665017
536.2357 :  9.4555926 3.9359293 0.2665025
 --> irls.delta(previous, resid) = 0.0811759 -- *not* converged
robust iteration 4 
195.205 :  9.4555926 3.9359293 0.2665025
167.8608 :  9.7235554 3.9337255 0.2618007
167.8547 :  9.7232590 3.9334273 0.2619112
167.8547 :  9.7232465 3.9334461 0.2619102
 --> irls.delta(previous, resid) = 0.0544385 -- *not* converged
robust iteration 5 
67.83645 :  9.7232465 3.9334461 0.2619102
66.26174 :  9.8100053 3.9004489 0.2626903
66.26155 :  9.8099992 3.9007261 0.2626896
 --> irls.delta(previous, resid) = 0.0127446 -- *not* converged
robust iteration 6 
68.65607 :  9.8099992 3.9007261 0.2626896
68.64105 :  9.8154000 3.9017856 0.2625405
 --> irls.delta(previous, resid) = 0.00130268 -- *not* converged
robust iteration 7 
68.56194 :  9.8154000 3.9017856 0.2625405
68.56183 :  9.8158802 3.9017606 0.2625422
 --> irls.delta(previous, resid) = 0.000115594 -- *not* converged
robust iteration 8 
68.53437 :  9.8158802 3.9017606 0.2625422
68.53436 :  9.8159260 3.9017553 0.2625444
 --> irls.delta(previous, resid) = 3.12699e-05 -- *not* converged
robust iteration 9 
68.52937 :  9.8159260 3.9017553 0.2625444
68.52937 :  9.8159277 3.9017617 0.2625447
 --> irls.delta(previous, resid) = 8.31924e-06 -- *not* converged
robust iteration 10 
68.52908 :  9.8159277 3.9017617 0.2625447
68.52908 :  9.8159259 3.9017665 0.2625446
 --> irls.delta(previous, resid) = 2.24809e-06 -- *not* converged
robust iteration 11 
68.52937 :  9.8159259 3.9017665 0.2625446
> ## 'port' ditto
> nlr2. <- update(nlr2, algorithm= "port")
robust iteration 1 
  0:     10892.401:  4.00000  1.00000  1.20000
  1:     10001.455:  4.00121 0.945141  1.17950
  2:     5822.4271:  6.55887 0.616723  1.00486
  3:     4146.0465:  9.06774 0.873215 0.806372
  4:     3551.0730:  9.51133  1.46356 0.596710
  5:     3119.4331:  9.52710  2.15368 0.480492
  6:     2956.2769:  9.20892  2.88537 0.398621
  7:     2932.7614:  9.10178  3.02461 0.406998
  8:     2932.6685:  9.08526  3.05875 0.402308
  9:     2932.6436:  9.09417  3.04065 0.404713
 10:     2932.6350:  9.09108  3.04683 0.403900
 11:     2932.6350:  9.09105  3.04685 0.403902
 12:     2932.6350:  9.09105  3.04685 0.403901
 --> irls.delta(previous, resid) = 0.959769 -- *not* converged
robust iteration 2 
  0:     1233.8029:  9.09105  3.04685 0.403901
  1:     1072.1844:  9.12501  2.98906 0.396524
  2:     762.05583:  9.59748  2.93252 0.366301
  3:     567.22761:  9.50018  3.66706 0.279669
  4:     548.04149:  9.21121  3.90922 0.275495
  5:     547.97233:  9.21716  3.90791 0.276298
  6:     547.97197:  9.21591  3.90967 0.276162
  7:     547.97196:  9.21611  3.90938 0.276185
  8:     547.97196:  9.21608  3.90943 0.276181
  9:     547.97196:  9.21608  3.90942 0.276182
 --> irls.delta(previous, resid) = 0.620293 -- *not* converged
robust iteration 3 
  0:     290.95944:  9.21608  3.90942 0.276182
  1:     272.15768:  9.40607  3.87523 0.272617
  2:     268.11458:  9.45411  3.94013 0.266219
  3:     268.10959:  9.45575  3.93571 0.266515
  4:     268.10959:  9.45560  3.93594 0.266502
  5:     268.10959:  9.45560  3.93593 0.266502
 --> irls.delta(previous, resid) = 0.0811727 -- *not* converged
robust iteration 4 
  0:     97.597196:  9.45560  3.93593 0.266502
  1:     85.371459:  9.66151  3.91880 0.264581
  2:     83.922590:  9.72324  3.93384 0.261878
  3:     83.922515:  9.72326  3.93344 0.261910
  4:     83.922515:  9.72325  3.93345 0.261910
 --> irls.delta(previous, resid) = 0.0544377 -- *not* converged
robust iteration 5 
  0:     33.917669:  9.72325  3.93345 0.261910
  1:     33.160997:  9.79523  3.91585 0.262010
  2:     33.130367:  9.81000  3.90072 0.262688
  3:     33.130366:  9.81000  3.90072 0.262690
  4:     33.130366:  9.81000  3.90072 0.262690
 --> irls.delta(previous, resid) = 0.0127437 -- *not* converged
robust iteration 6 
  0:     34.327936:  9.81000  3.90072 0.262690
  1:     34.320424:  9.81540  3.90179 0.262541
  2:     34.320424:  9.81540  3.90179 0.262540
 --> irls.delta(previous, resid) = 0.00130297 -- *not* converged
robust iteration 7 
  0:     34.281184:  9.81540  3.90179 0.262540
  1:     34.281131:  9.81588  3.90176 0.262542
  2:     34.281131:  9.81588  3.90176 0.262542
 --> irls.delta(previous, resid) = 0.000115741 -- *not* converged
robust iteration 8 
  0:     34.267255:  9.81588  3.90176 0.262542
  1:     34.267252:  9.81593  3.90176 0.262544
  2:     34.267252:  9.81593  3.90176 0.262544
 --> irls.delta(previous, resid) = 3.13214e-05 -- *not* converged
robust iteration 9 
  0:     34.264706:  9.81593  3.90176 0.262544
  1:     34.264705:  9.81593  3.90176 0.262545
  2:     34.264705:  9.81593  3.90176 0.262545
 --> irls.delta(previous, resid) = 8.31422e-06 -- *not* converged
robust iteration 10 
  0:     34.264547:  9.81593  3.90176 0.262545
  1:     34.264547:  9.81593  3.90177 0.262545
  2:     34.264547:  9.81593  3.90177 0.262545
 --> irls.delta(previous, resid) = 2.24081e-06 -- *not* converged
robust iteration 11 
  0:     34.264686:  9.81593  3.90177 0.262545
  1:     34.264686:  9.81592  3.90177 0.262545
> nlr3  <- update(nlr1, psi = psiHamp)   # *does* converge, too...
robust iteration 1 
31454.69 :  4.0 1.0 1.2
8855.052 :  9.566864 1.195180 0.570199
7978.792 :  9.3436311 2.2745145 0.3379566
6393.905 :  9.2490483 2.8460521 0.4479362
6217.215 :  9.0149617 3.2742086 0.3636331
6198.861 :  9.1424868 2.9620953 0.4021966
6195.098 :  9.0502674 3.1246589 0.3832724
6194.058 :  9.0867904 3.0498521 0.3929768
6193.813 :  9.066155 3.089743 0.388113
6193.749 :  9.075973 3.070080 0.390570
6193.733 :  9.0708845 3.0801040 0.3893352
6193.729 :  9.0734085 3.0750881 0.3899573
6193.728 :  9.0721286 3.0776208 0.3896442
6193.728 :  9.0727705 3.0763478 0.3898018
6193.728 :  9.0724467 3.0769891 0.3897225
6193.728 :  9.0726096 3.0766664 0.3897624
6193.728 :  9.0725276 3.0768289 0.3897423
6193.728 :  9.0725688 3.0767471 0.3897525
 --> irls.delta(previous, resid) = 0.964508 -- *not* converged
robust iteration 2 
4155.741 :  9.0725688 3.0767471 0.3897525
2262.909 :  9.2707966 3.8194173 0.2782037
2248.527 :  9.1305899 3.7893529 0.2842888
2248.479 :  9.1209110 3.8030025 0.2834302
2248.478 :  9.1220842 3.8011244 0.2835572
2248.478 :  9.1219068 3.8014066 0.2835384
2248.478 :  9.1219329 3.8013650 0.2835412
 --> irls.delta(previous, resid) = 0.555917 -- *not* converged
robust iteration 3 
811.1612 :  9.1219329 3.8013650 0.2835412
745.7407 :  9.3409239 3.9472046 0.2674901
745.5399 :  9.3430333 3.9316369 0.2686932
745.5393 :  9.3421653 3.9329653 0.2686211
745.5393 :  9.3422138 3.9328879 0.2686254
 --> irls.delta(previous, resid) = 0.0938441 -- *not* converged
robust iteration 4 
459.6674 :  9.3422138 3.9328879 0.2686254
439.7304 :  9.5554477 3.9349039 0.2644397
439.7246 :  9.5563480 3.9327723 0.2646233
439.7246 :  9.5562792 3.9328802 0.2646173
 --> irls.delta(previous, resid) = 0.0445753 -- *not* converged
robust iteration 5 
178.9083 :  9.5562792 3.9328802 0.2646173
167.2243 :  9.7485978 3.9050183 0.2630638
167.2225 :  9.7486564 3.9053802 0.2630903
 --> irls.delta(previous, resid) = 0.033507 -- *not* converged
robust iteration 6 
81.93475 :  9.7486564 3.9053802 0.2630903
80.72725 :  9.8061326 3.9014820 0.2629175
80.72724 :  9.8061327 3.9015034 0.2629184
 --> irls.delta(previous, resid) = 0.0111479 -- *not* converged
robust iteration 7 
90.48744 :  9.8061327 3.9015034 0.2629184
90.47359 :  9.7978752 3.9073040 0.2627073
90.47359 :  9.7978779 3.9073027 0.2627077
 --> irls.delta(previous, resid) = 0.00119868 -- *not* converged
robust iteration 8 
86.56106 :  9.7978779 3.9073027 0.2627077
86.55822 :  9.800401 3.907005 0.262727
 --> irls.delta(previous, resid) = 0.000609632 -- *not* converged
robust iteration 9 
88.08523 :  9.800401 3.907005 0.262727
88.08495 :  9.7992467 3.9075133 0.2627094
 --> irls.delta(previous, resid) = 0.00017947 -- *not* converged
robust iteration 10 
87.4576 :  9.7992467 3.9075133 0.2627094
87.45755 :  9.7996814 3.9073922 0.2627146
 --> irls.delta(previous, resid) = 8.61031e-05 -- *not* converged
robust iteration 11 
87.70611 :  9.7996814 3.9073922 0.2627146
87.7061 :  9.7995002 3.9074598 0.2627121
 --> irls.delta(previous, resid) = 3.08993e-05 -- *not* converged
robust iteration 12 
87.6054 :  9.7995002 3.9074598 0.2627121
87.6054 :  9.799571 3.907437 0.262713
 --> irls.delta(previous, resid) = 1.32347e-05 -- *not* converged
robust iteration 13 
87.64566 :  9.799571 3.907437 0.262713
87.64566 :  9.7995425 3.9074472 0.2627126
 --> irls.delta(previous, resid) = 5.11985e-06 -- *not* converged
robust iteration 14 
87.62944 :  9.7995425 3.9074472 0.2627126
87.62944 :  9.7995541 3.9074433 0.2627128
 --> irls.delta(previous, resid) = 2.10239e-06 -- *not* converged
robust iteration 15 
87.63595 :  9.7995541 3.9074433 0.2627128
> nlr3. <- update(nlr3, algorithm= "port")
robust iteration 1 
  0:     15727.347:  4.00000  1.00000  1.20000
  1:     14062.188:  3.91159 0.966688  1.18649
  2:     10672.136:  3.96238 0.834944  1.12760
  3:     7375.3147:  5.51478 0.709171 0.974142
  4:     4594.9111:  8.42560  1.49505 0.494567
  5:     3317.5213:  9.21757  2.96673 0.332383
  6:     3123.3083:  9.27814  2.82557 0.427745
  7:     3103.2632:  9.02262  3.20925 0.370497
  8:     3097.3210:  9.09129  3.05862 0.388622
  9:     3096.8691:  9.07490  3.07216 0.390326
 10:     3096.8652:  9.07138  3.07912 0.389458
 11:     3096.8641:  9.07315  3.07559 0.389895
 12:     3096.8639:  9.07226  3.07737 0.389675
 13:     3096.8638:  9.07271  3.07648 0.389786
 14:     3096.8638:  9.07248  3.07693 0.389730
 15:     3096.8638:  9.07259  3.07670 0.389758
 16:     3096.8638:  9.07254  3.07681 0.389744
 17:     3096.8638:  9.07256  3.07676 0.389751
 18:     3096.8638:  9.07255  3.07678 0.389748
 --> irls.delta(previous, resid) = 0.964509 -- *not* converged
robust iteration 2 
  0:     2077.8219:  9.07255  3.07678 0.389748
  1:     1742.6895:  8.96914  2.99037 0.382884
  2:     1409.1868:  9.27535  2.88218 0.364943
  3:     1168.2375:  9.40407  3.29733 0.313685
  4:     1126.3948:  9.19124  3.73501 0.284009
  5:     1124.2216:  9.12129  3.80190 0.283466
  6:     1124.2211:  9.12203  3.80121 0.283551
  7:     1124.2211:  9.12191  3.80140 0.283539
  8:     1124.2211:  9.12193  3.80137 0.283540
  9:     1124.2211:  9.12193  3.80138 0.283540
 --> irls.delta(previous, resid) = 0.555907 -- *not* converged
robust iteration 3 
  0:     405.57362:  9.12193  3.80138 0.283540
  1:     383.22137:  9.32457  3.78244 0.280212
  2:     373.43124:  9.38893  3.86693 0.271980
  3:     372.76698:  9.34042  3.93588 0.268415
  4:     372.76391:  9.34236  3.93267 0.268638
  5:     372.76390:  9.34221  3.93291 0.268624
  6:     372.76390:  9.34222  3.93289 0.268625
 --> irls.delta(previous, resid) = 0.0938412 -- *not* converged
robust iteration 4 
  0:     229.82800:  9.34222  3.93289 0.268625
  1:     220.49451:  9.52514  3.91639 0.266657
  2:     219.85717:  9.55571  3.93403 0.264547
  3:     219.85689:  9.55632  3.93283 0.264620
  4:     219.85689:  9.55629  3.93288 0.264617
  5:     219.85689:  9.55629  3.93288 0.264617
 --> irls.delta(previous, resid) = 0.0445741 -- *not* converged
robust iteration 5 
  0:     89.450043:  9.55629  3.93288 0.264617
  1:     85.536065:  9.64163  3.92824 0.264153
  2:     83.607425:  9.74860  3.90527 0.263079
  3:     83.607289:  9.74866  3.90538 0.263090
  4:     83.607289:  9.74866  3.90538 0.263090
 --> irls.delta(previous, resid) = 0.033507 -- *not* converged
robust iteration 6 
  0:     40.967119:  9.74866  3.90538 0.263090
  1:     40.363459:  9.80613  3.90148 0.262917
  2:     40.363457:  9.80613  3.90150 0.262918
  3:     40.363457:  9.80613  3.90150 0.262918
 --> irls.delta(previous, resid) = 0.0111473 -- *not* converged
robust iteration 7 
  0:     45.243822:  9.80613  3.90150 0.262918
  1:     45.236899:  9.79787  3.90730 0.262707
  2:     45.236899:  9.79788  3.90730 0.262708
  3:     45.236899:  9.79788  3.90730 0.262708
 --> irls.delta(previous, resid) = 0.00119869 -- *not* converged
robust iteration 8 
  0:     43.280493:  9.79788  3.90730 0.262708
  1:     43.279068:  9.80040  3.90700 0.262727
  2:     43.279068:  9.80040  3.90701 0.262727
 --> irls.delta(previous, resid) = 0.000609603 -- *not* converged
robust iteration 9 
  0:     44.042625:  9.80040  3.90701 0.262727
  1:     44.042482:  9.79925  3.90751 0.262709
  2:     44.042482:  9.79925  3.90751 0.262709
 --> irls.delta(previous, resid) = 0.000179325 -- *not* converged
robust iteration 10 
  0:     43.728819:  9.79925  3.90751 0.262709
  1:     43.728790:  9.79968  3.90739 0.262715
  2:     43.728790:  9.79968  3.90739 0.262715
 --> irls.delta(previous, resid) = 8.59939e-05 -- *not* converged
robust iteration 11 
  0:     43.853038:  9.79968  3.90739 0.262715
  1:     43.853034:  9.79950  3.90746 0.262712
  2:     43.853034:  9.79950  3.90746 0.262712
 --> irls.delta(previous, resid) = 3.08645e-05 -- *not* converged
robust iteration 12 
  0:     43.802711:  9.79950  3.90746 0.262712
  1:     43.802710:  9.79957  3.90744 0.262713
  2:     43.802710:  9.79957  3.90744 0.262713
 --> irls.delta(previous, resid) = 1.32148e-05 -- *not* converged
robust iteration 13 
  0:     43.822826:  9.79957  3.90744 0.262713
  1:     43.822825:  9.79954  3.90745 0.262713
  2:     43.822825:  9.79954  3.90745 0.262713
 --> irls.delta(previous, resid) = 5.1111e-06 -- *not* converged
robust iteration 14 
  0:     43.814723:  9.79954  3.90745 0.262713
  1:     43.814723:  9.79955  3.90744 0.262713
  2:     43.814723:  9.79955  3.90744 0.262713
 --> irls.delta(previous, resid) = 2.09836e-06 -- *not* converged
robust iteration 15 
  0:     43.817973:  9.79955  3.90744 0.262713
  1:     43.817973:  9.79955  3.90744 0.262713
> summary(nlr2.)

Call:
nlrob(formula = y ~ a * (x + b * exp(-c * x)), data = d, start = list(a = 4, 
    b = 1, c = 1.2), psi = psiTuk, maxit = 50, algorithm = "port", 
    trace = TRUE)

Residuals:
     Min       1Q   Median       3Q      Max 
-80.8710  -9.0677  -0.6409   0.8336   7.8824 

Parameters:
  Estimate Std. Error t value Pr(>|t|)    
a  9.81592    0.30133   32.58 1.19e-10 ***
b  3.90177    0.25445   15.33 9.32e-08 ***
c  0.26254    0.01298   20.22 8.23e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Robust residual standard error: 2.871 
Convergence in 11 IRWLS iterations

Robustness weights: 
 4 observations c(1,10,11,12) are outliers with |weight| = 0 ( < 0.0063); 
 3 weights are ~= 1. The remaining 9 ones are
     2      3      5      6      9     13     14     15     16 
0.9665 0.6199 0.4310 0.9894 0.9944 0.9636 0.9843 0.9465 0.9540 
> summary(nlr3.)

Call:
nlrob(formula = y ~ a * (x + b * exp(-c * x)), data = d, start = list(a = 4, 
    b = 1, c = 1.2), psi = psiHamp, maxit = 50, algorithm = "port", 
    trace = TRUE)

Residuals:
     Min       1Q   Median       3Q      Max 
-80.8093  -9.1350  -0.6438   0.8983   7.8419 

Parameters:
  Estimate Std. Error t value Pr(>|t|)    
a  9.79955    0.27069   36.20 6.15e-12 ***
b  3.90744    0.23112   16.91 1.10e-08 ***
c  0.26271    0.01177   22.32 7.34e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Robust residual standard error: 2.81 
Convergence in 15 IRWLS iterations

Robustness weights: 
 3 observations c(1,10,12) are outliers with |weight| = 0 ( < 0.0063); 
 10 weights are ~= 1. The remaining 3 ones are
      3       5      11 
0.60160 0.48469 0.05089 
> i. <- -c(2, 15) # <- drop 'call' and 'iter' components
> stopifnot(all.equal(nlr2[i.], nlr2.[i.], tolerance = 2e-5),
+           all.equal(nlr3[i.], nlr3.[i.], tolerance = 1e-4),
+           ## The redescending psi() give some exact 0 weights :
+ 	  identical(which(abs(nlr2$rweights) < 1e-9), c(1L, 10 :12)),
+ 	  identical(which(abs(nlr3$rweights) < 1e-9), c(1L, 10L,12L))
+ 	  )
> 
> 
> ## Different example with more data:
> pp <- list(a=10, b=4, c=1/4)
> x <- seq(-6,9, by = 1/8)
> f.x <- with(pp, a*(x + b*exp(-c*x)))
> set.seed(6); y <- y0 <- f.x + 4*rnorm(x)
> iO <- c(2:3,20,70:71,90); y[iO] <- y[iO] + 32*c(-1,-1,1)*(2+rlnorm(iO)); y <- round(y)
> plot(x,y); lines(x, f.x, col="tomato", lty = 2)
> dd <- data.frame(x,y)
> 
> nlc1 <- nls(formula(nlr1), start = coef(nlr1), data=dd, trace=TRUE)
46029.4 :  9.1868251 4.3000726 0.2337453
45400.15 :  9.3874317 4.4781431 0.2207645
45395.72 :  9.4076474 4.4428728 0.2225454
45395.67 :  9.4033531 4.4480358 0.2223394
45395.67 :  9.4038236 4.4474625 0.2223632
45395.67 :  9.4037687 4.4475294 0.2223605
> nlR1 <- update(nlr1, data = dd)# update the model with the new data
robust iteration 1 
3168834 :  4.0 1.0 1.2
2561749 :  11.0865893 -0.6571938  1.0072531
174677.5 :  11.2029162  0.1094524  1.1205735
157751.5 :  11.1953302  0.5517858  0.2485100
150492.6 :  10.2164220  3.3968590  0.4987896
30722.48 :  10.7416444  3.3079463  0.3607358
24480.55 :  10.2380697  3.6875599  0.2877979
24450.03 :  10.1345280  3.7183081  0.2839636
24450.01 :  10.1368590  3.7156174  0.2841939
24450.01 :  10.1366894  3.7158089  0.2841778
 --> irls.delta(previous, resid) = 0.985635 -- *not* converged
robust iteration 2 
7144.093 :  10.1366894  3.7158089  0.2841778
4997.811 :  9.9299661 3.9994553 0.2515935
4995.443 :  9.8909901 4.0192599 0.2507756
4995.443 :  9.8911718 4.0190929 0.2507889
 --> irls.delta(previous, resid) = 0.299322 -- *not* converged
robust iteration 3 
4429.342 :  9.8911718 4.0190929 0.2507889
4417.861 :  9.9116114 3.9923864 0.2508396
4417.861 :  9.9116055 3.9924490 0.2508395
 --> irls.delta(previous, resid) = 0.0168192 -- *not* converged
robust iteration 4 
4351.25 :  9.9116055 3.9924490 0.2508395
4350.921 :  9.9135429 3.9884283 0.2508398
 --> irls.delta(previous, resid) = 0.00288391 -- *not* converged
robust iteration 5 
4300.932 :  9.9135429 3.9884283 0.2508398
4300.913 :  9.914509 3.986762 0.250877
 --> irls.delta(previous, resid) = 0.000677833 -- *not* converged
robust iteration 6 
4282.129 :  9.914509 3.986762 0.250877
4282.127 :  9.9149071 3.9861104 0.2508969
 --> irls.delta(previous, resid) = 0.000205702 -- *not* converged
robust iteration 7 
4287.079 :  9.9149071 3.9861104 0.2508969
4287.079 :  9.9148740 3.9861242 0.2508963
 --> irls.delta(previous, resid) = 8.02224e-06 -- *not* converged
robust iteration 8 
4287.096 :  9.9148740 3.9861242 0.2508963
> summary(nlR1)

Call:
nlrob(formula = y ~ a * (x + b * exp(-c * x)), data = dd, start = list(a = 4, 
    b = 1, c = 1.2), maxit = 50, trace = TRUE)

Residuals:
      Min        1Q    Median        3Q       Max 
-104.3318   -2.8778   -0.2577    2.6657   94.8054 

Parameters:
  Estimate Std. Error t value Pr(>|t|)    
a 9.914874   0.127151   77.98   <2e-16 ***
b 3.986124   0.100492   39.67   <2e-16 ***
c 0.250896   0.004481   55.99   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Robust residual standard error: 4.021 
Convergence in 8 IRWLS iterations

Robustness weights: 
 94 weights are ~= 1. The remaining 27 ones are summarized as
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.05183 0.52880 0.70780 0.62570 0.88150 0.97880 
> lines(x, predict(nlc1), col=3)
> lines(x, predict(nlR1), col=4)
> legend("top", c("f(x)", "least squares", "robust"),
+        col=c("tomato", palette()[3:4]), lty=c(2,1,1))
> 
> ## These both now *do* converge, but failed earlier
> (nlbi <- update(nlR1, psi = psiTuk))
robust iteration 1 
218821.4 :  4.0 1.0 1.2
67190.96 :  11.4796669  1.0059635  0.5032814
54469.2 :  10.8090573  3.0731921  0.1285173
41356.45 :  12.829974  2.933520  0.431285
22089.84 :  10.6400263  3.2510340  0.3543112
21937.77 :  10.5059653  3.3865881  0.3320926
21937.31 :  10.4895024  3.3999947  0.3309259
21937.31 :  10.4890625  3.4005128  0.3308711
 --> irls.delta(previous, resid) = 0.973072 -- *not* converged
robust iteration 2 
2708.684 :  10.4890625  3.4005128  0.3308711
1316.352 :  10.1250000  3.8650546  0.2631006
1295.806 :  10.0105217  3.9226579  0.2617063
1295.802 :  10.0103498  3.9234445  0.2616981
 --> irls.delta(previous, resid) = 0.547283 -- *not* converged
robust iteration 3 
1727.818 :  10.0103498  3.9234445  0.2616981
1441.477 :  9.9520531 3.9612894 0.2543473
1441.407 :  9.9493148 3.9629432 0.2542019
 --> irls.delta(previous, resid) = 0.0932736 -- *not* converged
robust iteration 4 
1370.754 :  9.9493148 3.9629432 0.2542019
1363.893 :  9.9468413 3.9565046 0.2536626
1363.893 :  9.946816 3.956524 0.253660
 --> irls.delta(previous, resid) = 0.0137294 -- *not* converged
robust iteration 5 
1356.836 :  9.946816 3.956524 0.253660
1356.601 :  9.9472865 3.9541446 0.2536149
 --> irls.delta(previous, resid) = 0.00251554 -- *not* converged
robust iteration 6 
1360.308 :  9.9472865 3.9541446 0.2536149
1360.303 :  9.9474550 3.9538827 0.2536008
 --> irls.delta(previous, resid) = 0.000386631 -- *not* converged
robust iteration 7 
1365.09 :  9.9474550 3.9538827 0.2536008
1365.089 :  9.9474629 3.9541412 0.2535868
 --> irls.delta(previous, resid) = 9.55043e-05 -- *not* converged
robust iteration 8 
1365.378 :  9.9474629 3.9541412 0.2535868
1365.378 :  9.947459 3.954201 0.253584
 --> irls.delta(previous, resid) = 2.08125e-05 -- *not* converged
robust iteration 9 
1365.381 :  9.947459 3.954201 0.253584
1365.381 :  9.9474582 3.9542106 0.2535835
 --> irls.delta(previous, resid) = 3.30326e-06 -- *not* converged
robust iteration 10 
1365.378 :  9.9474582 3.9542106 0.2535835
Robustly fitted nonlinear regression model
  model:  y ~ a * (x + b * exp(-c * x)) 
   data:  dd 
        a         b         c 
9.9474582 3.9542106 0.2535835 
 status:  converged 
> (nlFH <- update(nlR1, psi = psiHamp))
robust iteration 1 
270384 :  4.0 1.0 1.2
72286 :  11.4610484  0.8970769  0.5403462
53715.74 :  11.1675893  1.9721716  0.2935121
23380.24 :  10.4491548  3.3499006  0.3414424
23228.39 :  10.4469324  3.4358531  0.3229528
23228.24 :  10.4367563  3.4420118  0.3224136
23228.24 :  10.4366412  3.4421481  0.3223996
 --> irls.delta(previous, resid) = 0.975764 -- *not* converged
robust iteration 2 
3706.949 :  10.4366412  3.4421481  0.3223996
1417.131 :  10.0880390  3.8890387  0.2600798
1399.404 :  9.9715139 3.9526939 0.2574098
1399.398 :  9.971213 3.953574 0.257405
 --> irls.delta(previous, resid) = 0.528145 -- *not* converged
robust iteration 3 
1659.375 :  9.971213 3.953574 0.257405
1557.143 :  9.9503092 3.9580751 0.2539913
1557.134 :  9.9496678 3.9584505 0.2539479
 --> irls.delta(previous, resid) = 0.0520968 -- *not* converged
robust iteration 4 
1468.602 :  9.9496678 3.9584505 0.2539479
1464.781 :  9.9553553 3.9469515 0.2538397
1464.781 :  9.9553513 3.9469627 0.2538392
 --> irls.delta(previous, resid) = 0.00985236 -- *not* converged
robust iteration 5 
1489.146 :  9.9553513 3.9469627 0.2538392
1489.03 :  9.953683 3.948046 0.253687
 --> irls.delta(previous, resid) = 0.00178012 -- *not* converged
robust iteration 6 
1491.851 :  9.953683 3.948046 0.253687
1491.846 :  9.9531514 3.9486405 0.2536412
 --> irls.delta(previous, resid) = 0.000357033 -- *not* converged
robust iteration 7 
1493.922 :  9.9531514 3.9486405 0.2536412
1493.922 :  9.9529559 3.9489362 0.2536263
 --> irls.delta(previous, resid) = 8.12118e-05 -- *not* converged
robust iteration 8 
1494.386 :  9.9529559 3.9489362 0.2536263
1494.386 :  9.9529083 3.9490188 0.2536227
 --> irls.delta(previous, resid) = 2.15112e-05 -- *not* converged
robust iteration 9 
1494.524 :  9.9529083 3.9490188 0.2536227
1494.524 :  9.9528966 3.9490414 0.2536219
 --> irls.delta(previous, resid) = 6.40056e-06 -- *not* converged
robust iteration 10 
1494.563 :  9.9528966 3.9490414 0.2536219
1494.563 :  9.9528938 3.9490474 0.2536217
 --> irls.delta(previous, resid) = 1.95439e-06 -- *not* converged
robust iteration 11 
1494.573 :  9.9528938 3.9490474 0.2536217
Robustly fitted nonlinear regression model
  model:  y ~ a * (x + b * exp(-c * x)) 
   data:  dd 
        a         b         c 
9.9528938 3.9490474 0.2536217 
 status:  converged 
> lines(x, predict(nlbi), col=5)
> lines(x, predict(nlFH), col=6)
> 
> stopifnot(nlR1$status == "converged", nlbi$status == "converged",
+ 	  nlFH$status == "converged")
> assert.EQ(coef(nlR1), c(a=9.914874,    b=3.98612416,  c=0.250896252),  tol = 1e-9)
> assert.EQ(coef(nlbi), c(a=9.947458207, b=3.954210623, c=0.2535835248), tol = 1e-9)
> ## This is suddently quite different :  ???!?!??
> ## assert.EQ(coef(nlFH), c(a=9.94242831, b=3.97370746, c=0.252907618))
> assert.EQ(coef(nlFH),    c(a=9.952893755,b=3.949047387,c=0.2536216541), tol = 1e-7)
> assert.EQ(1000*diag(vcov(nlR1)),
+           c(a=16.167493, b=10.0986644, c=0.0200814189), tol = 7e-7, giveRE=TRUE)
Mean relative difference: 1.754809e-08
> assert.EQ(1000*local({V <- vcov(nlFH); V[lower.tri(V, diag=TRUE)]}),
+           c(16.33774615, -9.704702857, 0.3149189329,
+             10.03560556, -0.4079936961, 0.02039106329), tol = 7e-7)
> assert.EQ(predict(nlR1), predict(nlbi), tol = 0.05, giveRE=TRUE)
Mean relative difference: 0.004298822
> assert.EQ(predict(nlR1), predict(nlFH), tol = 0.05, giveRE=TRUE)
Mean relative difference: 0.004179098
> 
> nlFH2 <- update(nlFH, psi = .Mwgt.psi1("Hampel", c(2,4,8)))
robust iteration 1 
350706.2 :  4.0 1.0 1.2
85829.27 :  11.4860763  0.7331785  0.5917242
73419.93 :  11.2633175  1.8117585  0.2748708
27827.79 :  10.5316029  3.3184981  0.3672919
26205.58 :  10.5213436  3.4018012  0.3279451
26199.95 :  10.4829167  3.4224332  0.3249664
26199.95 :  10.4820206  3.4234368  0.3248697
 --> irls.delta(previous, resid) = 0.974981 -- *not* converged
robust iteration 2 
5431.585 :  10.4820206  3.4234368  0.3248697
1567.259 :  10.1036259  3.8892865  0.2591098
1542.356 :  9.963650 3.969473 0.255059
1542.341 :  9.9628615 3.9710060 0.2550389
 --> irls.delta(previous, resid) = 0.560849 -- *not* converged
robust iteration 3 
1767.891 :  9.9628615 3.9710060 0.2550389
1724.468 :  9.9419021 3.9775104 0.2527665
1724.467 :  9.9415996 3.9777064 0.2527468
 --> irls.delta(previous, resid) = 0.0333368 -- *not* converged
robust iteration 4 
1696.769 :  9.9415996 3.9777064 0.2527468
1696.671 :  9.9423636 3.9734382 0.2529201
1696.671 :  9.9423653 3.9734351 0.2529204
 --> irls.delta(previous, resid) = 0.00145877 -- *not* converged
robust iteration 5 
1699.315 :  9.9423653 3.9734351 0.2529204
1699.315 :  9.9424320 3.9737359 0.2529063
 --> irls.delta(previous, resid) = 0.000125732 -- *not* converged
robust iteration 6 
1699.078 :  9.9424320 3.9737359 0.2529063
1699.078 :  9.9424283 3.9737075 0.2529076
 --> irls.delta(previous, resid) = 1.13893e-05 -- *not* converged
robust iteration 7 
1699.099 :  9.9424283 3.9737075 0.2529076
> ## TODO: and compare
> ## TODO: same with Tukey
> 
> 
> ##----- *Vector* parameters indexed by factor  levels -------------
> ##----- MM: ~/R/MM/Pkg-ex/robustbase/nlrob-vectorpar.R
> 
> data(biomassTill)## see also smaller example in ../man/biomassTill.Rd
> 
> if(!dev.interactive(orNone=TRUE))  pdf("nlrob-biomT.pdf")
> 
> require(lattice)
Loading required package: lattice
> xyplot(Biomass ~ DVS | Tillage, data = biomassTill)
> xyplot(Biom.2  ~ DVS | Tillage, data = biomassTill)
> 
> ## starting values
> m0.st <- list(Wm = rep(200, 3),
+                a = rep(  1, 3),
+                b = rep(  2, 3))
> ##-> nls(), even with -expm1(.) fails to start properly (and hence nlrob() fails too):
> try(
+ m.c0 <- nls(Biomass ~ Wm[Tillage] * (- expm1(-(DVS/a[Tillage])^b[Tillage])),
+             data = biomassTill, start = m0.st, trace=TRUE)
+ )
587654.1 :  200 200 200   1   1   1   2   2   2
482258.8 :  272.497802 374.092577 409.583105   1.799294   2.134555   2.012146   1.402013   1.257745   2.203630
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> ## several other versions of the above fail similarly.  This works:
> m00st <- list(Wm = rep(300,  3),
+                a = rep( 1.5, 3),
+                b = rep( 2.2, 3))
> m.c00 <- nls(Biomass ~ Wm[Tillage] * (- expm1(-(DVS/a[Tillage])^b[Tillage])),
+             data = biomassTill, start = m00st, trace=TRUE)
420613.6 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
344484 :  362.537574 497.036557 343.010063   2.020939   2.224128   1.132643   2.220821   2.385964   3.655383
299205 :  457.762473 577.655834 372.301765   2.311593   2.066906   1.363035   2.391580   2.687003   2.986474
294696.7 :  487.916760 622.438623 380.035095   2.338248   2.203776   1.374860   2.399665   2.571926   3.506427
294644.3 :  490.313089 609.589796 380.022386   2.343958   2.176673   1.371195   2.396815   2.601775   3.591947
294644.1 :  489.829778 616.802817 380.065901   2.342473   2.192439   1.371285   2.397443   2.593020   3.594869
294644.1 :  489.934540 615.160924 380.064007   2.342793   2.188804   1.371278   2.397310   2.595326   3.594965
294644.1 :  489.912689 615.658832 380.063973   2.342726   2.189888   1.371278   2.397338   2.594692   3.594968
294644.1 :  489.917310 615.527885 380.063972   2.342740   2.189602   1.371278   2.397332   2.594862   3.594968
> 
> ## These were the "true" beta for simulating in creation of {Biomass, Biom.2}:
> m1.st <- list(Wm = c(219.8, 265.9, 343.4),
+                a = c(1.461, 1.493, 1.294),
+                b = c(2.889, 2.838, 4.046))
> 
> m.cl <- nls(Biomass ~ Wm[Tillage] * (1 - exp(-(DVS/a[Tillage])^b[Tillage])),
+             data = biomassTill, start = m00st, trace=TRUE)
420613.6 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
344484 :  362.537574 497.036556 343.010060   2.020939   2.224128   1.132643   2.220821   2.385964   3.655383
299205 :  457.762452 577.655837 372.301763   2.311593   2.066906   1.363035   2.391580   2.687003   2.986474
294696.7 :  487.916804 622.438655 380.035095   2.338249   2.203776   1.374860   2.399665   2.571926   3.506427
294644.3 :  490.313067 609.589730 380.022386   2.343958   2.176673   1.371195   2.396815   2.601775   3.591947
294644.1 :  489.829860 616.802926 380.065901   2.342474   2.192439   1.371285   2.397443   2.593020   3.594869
294644.1 :  489.934546 615.160787 380.064007   2.342793   2.188804   1.371278   2.397310   2.595326   3.594965
294644.1 :  489.912756 615.658778 380.063973   2.342726   2.189888   1.371278   2.397338   2.594692   3.594968
294644.1 :  489.917312 615.528023 380.063972   2.342740   2.189602   1.371278   2.397332   2.594862   3.594968
> ## this now fails to converge:
> try(
+ m.c2 <- nls(Biom.2 ~ Wm[Tillage] * (1 - exp(-(DVS/a[Tillage])^b[Tillage])),
+             data = biomassTill, start = m00st, trace=TRUE)
+ )
438775.3 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
Error in nls(Biom.2 ~ Wm[Tillage] * (1 - exp(-(DVS/a[Tillage])^b[Tillage])),  : 
  singular gradient
> 
> str(C1 <- nls.control(minFactor=1e-6, warnOnly=TRUE, printEval=TRUE, maxiter=500))
List of 5
 $ maxiter  : num 500
 $ tol      : num 1e-05
 $ minFactor: num 1e-06
 $ printEval: logi TRUE
 $ warnOnly : logi TRUE
> 
> try(
+ m.c2 <- nls(Biom.2 ~ Wm[Tillage] * (1 - exp(-(DVS/a[Tillage])^b[Tillage])),
+                 data = biomassTill, start = m00st, trace=TRUE, control=C1)
+ )
438775.3 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
  It.   1, fac=           1, eval (no.,total): ( 1,  1):Warning message:
In nls(Biom.2 ~ Wm[Tillage] * (1 - exp(-(DVS/a[Tillage])^b[Tillage])),  :
  singular gradient
> ## fails (!) too {numericDeriv() in iteration 129} even though we have
> ## 'warnOnly' ! ==> bug in nls()  !!!!!!!!!!!!!!!!!!!!!!!!!!!
> 
> ## -expm1(u) is better than (1 - exp(u)) :
> m.c00 <- nls(Biom.2 ~ Wm[Tillage] * (- expm1(-(DVS/a[Tillage])^b[Tillage])),
+              data = biomassTill, start = m00st, trace=TRUE, control=C1)
438775.3 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
  It.   1, fac=           1, eval (no.,total): ( 1,  1):Warning message:
In nls(Biom.2 ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage])),  :
  singular gradient
> ## "fails" but returns .. very bad..
> m.c00
Nonlinear regression model
  model: Biom.2 ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage]))
   data: biomassTill
     Wm1      Wm2      Wm3       a1       a2       a3       b1       b2 
579.5709 -65.2797 343.0101   3.0370   0.1953   1.1326   0.1499   3.6698 
      b3 
  3.6554 
 residual sum-of-squares: 1755085

Number of iterations till stop: 0 
Achieved convergence tolerance: 0.7041
Reason stopped: singular gradient
> ## Use better starting values, as we have such problems:
> m.c2 <- nls(Biom.2 ~ Wm[Tillage] * (- expm1(-(DVS/a[Tillage])^b[Tillage])),
+             data = biomassTill, start = m1.st, trace=TRUE, control=C1)
346662.5 :  219.800 265.900 343.400   1.461   1.493   1.294   2.889   2.838   4.046
  It.   1, fac=           1, eval (no.,total): ( 1,  1): new dev = 851368
  It.   1, fac=         0.5, eval (no.,total): ( 2,  2): new dev = 312626
312625.9 :  309.409509 153.750287 359.701730   1.892067   1.100219   1.328286   1.430481   3.275306   3.800108
  It.   2, fac=           1, eval (no.,total): ( 1,  3): new dev = 4.28282e+07
  It.   2, fac=         0.5, eval (no.,total): ( 2,  4): new dev = 2.57229e+06
  It.   2, fac=        0.25, eval (no.,total): ( 3,  5): new dev = 384268
  It.   2, fac=       0.125, eval (no.,total): ( 4,  6): new dev = 315274
  It.   2, fac=      0.0625, eval (no.,total): ( 5,  7): new dev = 311399
311399.5 :  390.791178 153.139178 360.884431   2.477000   1.091192   1.330795   1.280800   3.372159   3.786863
  It.   3, fac=       0.125, eval (no.,total): ( 1,  8): new dev = 334082
  It.   3, fac=      0.0625, eval (no.,total): ( 2,  9): new dev = 312701
  It.   3, fac=     0.03125, eval (no.,total): ( 3, 10): new dev = 310867
310866.6 :  479.616182 152.870338 361.443438   3.149754   1.087120   1.331980   1.204630   3.420235   3.780688
  It.   4, fac=      0.0625, eval (no.,total): ( 1, 11): new dev = 316839
  It.   4, fac=     0.03125, eval (no.,total): ( 2, 12): new dev = 311168
  It.   4, fac=    0.015625, eval (no.,total): ( 3, 13): new dev = 310551
310550.8 :  560.189108 152.743535 361.715265   3.780869   1.085179   1.332556   1.165901   3.444206   3.777705
  It.   5, fac=     0.03125, eval (no.,total): ( 1, 14): new dev = 311781
  It.   5, fac=    0.015625, eval (no.,total): ( 2, 15): new dev = 310448
310447.6 :  682.777220 152.620253 361.983350   4.759824   1.083281   1.333124   1.126675   3.468146   3.774771
  It.   6, fac=     0.03125, eval (no.,total): ( 1, 16): new dev = 313578
  It.   6, fac=    0.015625, eval (no.,total): ( 2, 17): new dev = 310756
  It.   6, fac=   0.0078125, eval (no.,total): ( 3, 18): new dev = 310336
310335.7 :  784.003142 152.560304 362.115545   5.586796   1.082353   1.333405   1.106825   3.480102   3.773329
  It.   7, fac=    0.015625, eval (no.,total): ( 1, 19): new dev = 311007
  It.   7, fac=   0.0078125, eval (no.,total): ( 2, 20): new dev = 310316
310315.7 :  925.959933 152.501175 362.246829   6.761121   1.081436   1.333683   1.086805   3.492051   3.771899
  It.   8, fac=    0.015625, eval (no.,total): ( 1, 21): new dev = 311576
  It.   8, fac=   0.0078125, eval (no.,total): ( 2, 22): new dev = 310442
  It.   8, fac=  0.00390625, eval (no.,total): ( 3, 23): new dev = 310254
310254.4 :  1031.080421  152.472013  362.312017    7.642700    1.080982    1.333821    1.076715    3.498023    3.771190
  It.   9, fac=   0.0078125, eval (no.,total): ( 1, 24): new dev = 310489
  It.   9, fac=  0.00390625, eval (no.,total): ( 2, 25): new dev = 310222
310221.9 :  1165.985359  152.443049  362.376981    8.782300    1.080531    1.333959    1.066571    3.503993    3.770484
  It.  10, fac=   0.0078125, eval (no.,total): ( 1, 26): new dev = 310603
  It.  10, fac=  0.00390625, eval (no.,total): ( 2, 27): new dev = 310229
  It.  10, fac=  0.00195312, eval (no.,total): ( 3, 28): new dev = 310176
310176.3 :  1255.211031  152.428665  362.409350    9.541770    1.080307    1.334027    1.061472    3.506977    3.770133
  It.  11, fac=  0.00390625, eval (no.,total): ( 1, 29): new dev = 310208
  It.  11, fac=  0.00195312, eval (no.,total): ( 2, 30): new dev = 310137
310137.5 :  1360.589529  152.414331  362.441664   10.442249    1.080083    1.334096    1.056356    3.509961    3.769782
  It.  12, fac=  0.00390625, eval (no.,total): ( 1, 31): new dev = 310200
  It.  12, fac=  0.00195312, eval (no.,total): ( 2, 32): new dev = 310107
310107 :  1486.755489  152.400045  362.473922   11.524680    1.079860    1.334164    1.051224    3.512944    3.769432
  It.  13, fac=  0.00390625, eval (no.,total): ( 1, 33): new dev = 310207
  It.  13, fac=  0.00195312, eval (no.,total): ( 2, 34): new dev = 310087
310086.8 :  1640.239693  152.385807  362.506124   12.846869    1.079637    1.334232    1.046076    3.515927    3.769082
  It.  14, fac=  0.00390625, eval (no.,total): ( 1, 35): new dev = 310234
  It.  14, fac=  0.00195312, eval (no.,total): ( 2, 36): new dev = 310079
310079.4 :  1830.518798  152.371618  362.538270   14.492869    1.079415    1.334300    1.040912    3.518910    3.768734
  It.  15, fac=  0.00390625, eval (no.,total): ( 1, 37): new dev = 310286
  It.  15, fac=  0.00195312, eval (no.,total): ( 2, 38): new dev = 310088
  It.  15, fac= 0.000976562, eval (no.,total): ( 3, 39): new dev = 310058
310058 :  1951.171801  152.364547  362.554316   15.541019    1.079305    1.334334    1.038322    3.520401    3.768560
  It.  16, fac=  0.00195312, eval (no.,total): ( 1, 40): new dev = 310077
  It.  16, fac= 0.000976562, eval (no.,total): ( 2, 41): new dev = 310039
310039.5 :  2089.636539  152.357489  362.570347   16.746518    1.079194    1.334368    1.035728    3.521892    3.768386
  It.  17, fac=  0.00195312, eval (no.,total): ( 1, 42): new dev = 310070
  It.  17, fac= 0.000976562, eval (no.,total): ( 2, 43): new dev = 310024
310024.1 :  2250.043778  152.350442  362.586365   18.146109    1.079084    1.334402    1.033129    3.523383    3.768212
  It.  18, fac=  0.00195312, eval (no.,total): ( 1, 44): new dev = 310069
  It.  18, fac= 0.000976562, eval (no.,total): ( 2, 45): new dev = 310012
310012.4 :  2437.872590  152.343408  362.602369   19.788574    1.078974    1.334436    1.030525    3.524874    3.768039
  It.  19, fac=  0.00195312, eval (no.,total): ( 1, 46): new dev = 310073
  It.  19, fac= 0.000976562, eval (no.,total): ( 2, 47): new dev = 310005
310005.2 :  2660.538247  152.336385  362.618359   21.739991    1.078864    1.334470    1.027917    3.526365    3.767866
  It.  20, fac=  0.00195312, eval (no.,total): ( 1, 48): new dev = 310085
  It.  20, fac= 0.000976562, eval (no.,total): ( 2, 49): new dev = 310003
310003.4 :  2928.307994  152.329374  362.634335   24.091940    1.078754    1.334504    1.025304    3.527856    3.767693
  It.  21, fac=  0.00195312, eval (no.,total): ( 1, 50): new dev = 310107
  It.  21, fac= 0.000976562, eval (no.,total): ( 2, 51): new dev = 310008
  It.  21, fac= 0.000488281, eval (no.,total): ( 3, 52): new dev = 309993
309992.8 :  3092.045083  152.325875  362.642316   25.533355    1.078699    1.334521    1.023995    3.528601    3.767606
  It.  22, fac= 0.000976562, eval (no.,total): ( 1, 53): new dev = 310001
  It.  22, fac= 0.000488281, eval (no.,total): ( 2, 54): new dev = 309983
309983.2 :  3275.564377  152.322378  362.650294   27.150754    1.078644    1.334538    1.022686    3.529347    3.767520
  It.  23, fac= 0.000976562, eval (no.,total): ( 1, 55): new dev = 309996
  It.  23, fac= 0.000488281, eval (no.,total): ( 2, 56): new dev = 309975
309974.9 :  3482.590011  152.318885  362.658268   28.977395    1.078589    1.334555    1.021375    3.530092    3.767434
  It.  24, fac= 0.000976562, eval (no.,total): ( 1, 57): new dev = 309993
  It.  24, fac= 0.000488281, eval (no.,total): ( 2, 58): new dev = 309968
309967.9 :  3717.827994  152.315394  362.666239   31.055322    1.078534    1.334572    1.020062    3.530837    3.767347
  It.  25, fac= 0.000976562, eval (no.,total): ( 1, 59): new dev = 309992
  It.  25, fac= 0.000488281, eval (no.,total): ( 2, 60): new dev = 309962
309962.5 :  3987.296502  152.311907  362.674206   33.438322    1.078480    1.334588    1.018749    3.531582    3.767261
  It.  26, fac= 0.000976562, eval (no.,total): ( 1, 61): new dev = 309993
  It.  26, fac= 0.000488281, eval (no.,total): ( 2, 62): new dev = 309959
309958.8 :  4298.822040  152.308422  362.682170   36.196371    1.078425    1.334605    1.017434    3.532327    3.767175
  It.  27, fac= 0.000976562, eval (no.,total): ( 1, 63): new dev = 309997
  It.  27, fac= 0.000488281, eval (no.,total): ( 2, 64): new dev = 309957
309957.3 :  4662.748267  152.304940  362.690130   39.421991    1.078370    1.334622    1.016118    3.533073    3.767089
  It.  28, fac= 0.000976562, eval (no.,total): ( 1, 65): new dev = 310004
  It.  28, fac= 0.000488281, eval (no.,total): ( 2, 66): new dev = 309958
  It.  28, fac= 0.000244141, eval (no.,total): ( 3, 67): new dev = 309952
309951.6 :  4877.884456  152.303201  362.694109   41.330979    1.078343    1.334631    1.015459    3.533445    3.767046
  It.  29, fac= 0.000488281, eval (no.,total): ( 1, 68): new dev = 309954
  It.  29, fac= 0.000244141, eval (no.,total): ( 2, 69): new dev = 309946
309946.3 :  5113.969954  152.301462  362.698087   43.427046    1.078316    1.334639    1.014801    3.533818    3.767002
  It.  30, fac= 0.000488281, eval (no.,total): ( 1, 70): new dev = 309950
  It.  30, fac= 0.000244141, eval (no.,total): ( 2, 71): new dev = 309941
309941.4 :  5374.160928  152.299725  362.702063   45.738435    1.078288    1.334647    1.014141    3.534190    3.766959
  It.  31, fac= 0.000488281, eval (no.,total): ( 1, 72): new dev = 309947
  It.  31, fac= 0.000244141, eval (no.,total): ( 2, 73): new dev = 309937
309937 :  5662.276641  152.297987  362.706039   48.299329    1.078261    1.334656    1.013482    3.534563    3.766916
  It.  32, fac= 0.000488281, eval (no.,total): ( 1, 74): new dev = 309945
  It.  32, fac= 0.000244141, eval (no.,total): ( 2, 75): new dev = 309933
309933.1 :  5982.964021  152.296251  362.710014   51.151325    1.078234    1.334664    1.012822    3.534936    3.766873
  It.  33, fac= 0.000488281, eval (no.,total): ( 1, 76): new dev = 309943
  It.  33, fac= 0.000244141, eval (no.,total): ( 2, 77): new dev = 309930
309929.8 :  6341.955211  152.294515  362.713989   54.345742    1.078206    1.334673    1.012162    3.535308    3.766830
  It.  34, fac= 0.000488281, eval (no.,total): ( 1, 78): new dev = 309942
  It.  34, fac= 0.000244141, eval (no.,total): ( 2, 79): new dev = 309927
309927.1 :  6746.377563  152.292780  362.717962   57.946404    1.078179    1.334681    1.011501    3.535681    3.766787
  It.  35, fac= 0.000488281, eval (no.,total): ( 1, 80): new dev = 309942
  It.  35, fac= 0.000244141, eval (no.,total): ( 2, 81): new dev = 309925
309925.3 :  7205.222730  152.291046  362.721934   62.033835    1.078152    1.334690    1.010840    3.536053    3.766744
  It.  36, fac= 0.000488281, eval (no.,total): ( 1, 82): new dev = 309943
  It.  36, fac= 0.000244141, eval (no.,total): ( 2, 83): new dev = 309924
309924.2 :  7729.954754  152.289313  362.725906   66.710722    1.078125    1.334698    1.010179    3.536426    3.766701
  It.  37, fac= 0.000488281, eval (no.,total): ( 1, 84): new dev = 309946
  It.  37, fac= 0.000244141, eval (no.,total): ( 2, 85): new dev = 309924
309924.2 :  8335.435291  152.287580  362.729877   72.110203    1.078097    1.334706    1.009517    3.536798    3.766659
  It.  38, fac= 0.000488281, eval (no.,total): ( 1, 86): new dev = 309950
  It.  38, fac= 0.000244141, eval (no.,total): ( 2, 87): new dev = 309925
  It.  38, fac=  0.00012207, eval (no.,total): ( 3, 88): new dev = 309921
309921.5 :  8688.335722  152.286714  362.731862   75.258922    1.078084    1.334711    1.009186    3.536984    3.766637
  It.  39, fac= 0.000244141, eval (no.,total): ( 1, 89): new dev = 309923
  It.  39, fac=  0.00012207, eval (no.,total): ( 2, 90): new dev = 309919
309918.9 :  9072.282907  152.285848  362.733847   78.685552    1.078070    1.334715    1.008855    3.537171    3.766616
  It.  40, fac= 0.000244141, eval (no.,total): ( 1, 91): new dev = 309921
  It.  40, fac=  0.00012207, eval (no.,total): ( 2, 92): new dev = 309917
309916.6 :  9491.486062  152.284983  362.735831   82.427807    1.078057    1.334719    1.008524    3.537357    3.766594
  It.  41, fac= 0.000244141, eval (no.,total): ( 1, 93): new dev = 309920
  It.  41, fac=  0.00012207, eval (no.,total): ( 2, 94): new dev = 309914
309914.5 :  9950.957933  152.284117  362.737815   86.530599    1.078043    1.334723    1.008193    3.537543    3.766573
  It.  42, fac= 0.000244141, eval (no.,total): ( 1, 95): new dev = 309919
  It.  42, fac=  0.00012207, eval (no.,total): ( 2, 96): new dev = 309913
309912.6 :  10456.665143   152.283252   362.739799    91.047392     1.078029     1.334727     1.007862     3.537730     3.766551
  It.  43, fac= 0.000244141, eval (no.,total): ( 1, 97): new dev = 309918
  It.  43, fac=  0.00012207, eval (no.,total): ( 2, 98): new dev = 309911
309911 :  11015.836748   152.282387   362.741783    96.042963     1.078016     1.334732     1.007530     3.537916     3.766530
  It.  44, fac= 0.000244141, eval (no.,total): ( 1, 99): new dev = 309917
  It.  44, fac=  0.00012207, eval (no.,total): ( 2,100): new dev = 309910
309909.6 :  11637.239181   152.281522   362.743767   101.595869     1.078002     1.334736     1.007199     3.538102     3.766508
  It.  45, fac= 0.000244141, eval (no.,total): ( 1,101): new dev = 309917
  It.  45, fac=  0.00012207, eval (no.,total): ( 2,102): new dev = 309909
309908.6 :  12331.626421   152.280657   362.745750   107.802483     1.077989     1.334740     1.006868     3.538288     3.766487
  It.  46, fac= 0.000244141, eval (no.,total): ( 1,103): new dev = 309917
  It.  46, fac=  0.00012207, eval (no.,total): ( 2,104): new dev = 309908
309907.9 :  13112.388056   152.279793   362.747734   114.782800     1.077975     1.334744     1.006536     3.538475     3.766465
  It.  47, fac= 0.000244141, eval (no.,total): ( 1,105): new dev = 309918
  It.  47, fac=  0.00012207, eval (no.,total): ( 2,106): new dev = 309908
309907.6 :  13996.288982   152.278928   362.749717   122.687072     1.077961     1.334748     1.006204     3.538661     3.766444
  It.  48, fac= 0.000244141, eval (no.,total): ( 1,107): new dev = 309919
  It.  48, fac=  0.00012207, eval (no.,total): ( 2,108): new dev = 309908
  It.  48, fac= 6.10352e-05, eval (no.,total): ( 3,109): new dev = 309906
309906.1 :  14500.496045   152.278496   362.750708   127.196967     1.077955     1.334751     1.006038     3.538754     3.766433
  It.  49, fac=  0.00012207, eval (no.,total): ( 1,110): new dev = 309907
  It.  49, fac= 6.10352e-05, eval (no.,total): ( 2,111): new dev = 309905
309904.7 :  15042.038868   152.278064   362.751700   132.041354     1.077948     1.334753     1.005872     3.538847     3.766422
  It.  50, fac=  0.00012207, eval (no.,total): ( 1,112): new dev = 309905
  It.  50, fac= 6.10352e-05, eval (no.,total): ( 2,113): new dev = 309903
309903.4 :  15625.206996   152.277632   362.752691   137.258673     1.077941     1.334755     1.005707     3.538940     3.766412
  It.  51, fac=  0.00012207, eval (no.,total): ( 1,114): new dev = 309904
  It.  51, fac= 6.10352e-05, eval (no.,total): ( 2,115): new dev = 309902
309902.2 :  16254.909097   152.277200   362.753682   142.892915     1.077934     1.334757     1.005541     3.539033     3.766401
  It.  52, fac=  0.00012207, eval (no.,total): ( 1,116): new dev = 309903
  It.  52, fac= 6.10352e-05, eval (no.,total): ( 2,117): new dev = 309901
309901 :  16936.836318   152.276768   362.754673   148.995083     1.077928     1.334759     1.005375     3.539126     3.766390
  It.  53, fac=  0.00012207, eval (no.,total): ( 1,118): new dev = 309903
  It.  53, fac= 6.10352e-05, eval (no.,total): ( 2,119): new dev = 309900
309900 :  17677.675769   152.276337   362.755664   155.625106     1.077921     1.334761     1.005209     3.539220     3.766380
  It.  54, fac=  0.00012207, eval (no.,total): ( 1,120): new dev = 309902
  It.  54, fac= 6.10352e-05, eval (no.,total): ( 2,121): new dev = 309899
309899 :  18485.327599   152.275905   362.756655   162.853782     1.077914     1.334763     1.005043     3.539313     3.766369
  It.  55, fac=  0.00012207, eval (no.,total): ( 1,122): new dev = 309901
  It.  55, fac= 6.10352e-05, eval (no.,total): ( 2,123): new dev = 309898
309898.1 :  19369.056679   152.275473   362.757647   170.764141     1.077907     1.334765     1.004877     3.539406     3.766358
  It.  56, fac=  0.00012207, eval (no.,total): ( 1,124): new dev = 309901
  It.  56, fac= 6.10352e-05, eval (no.,total): ( 2,125): new dev = 309897
309897.4 :  20339.901016   152.275041   362.758637   179.455102     1.077900     1.334767     1.004711     3.539499     3.766347
  It.  57, fac=  0.00012207, eval (no.,total): ( 1,126): new dev = 309901
  It.  57, fac= 6.10352e-05, eval (no.,total): ( 2,127): new dev = 309897
309896.8 :  21411.317817   152.274610   362.759628   189.047262     1.077894     1.334769     1.004544     3.539592     3.766337
  It.  58, fac=  0.00012207, eval (no.,total): ( 1,128): new dev = 309901
  It.  58, fac= 6.10352e-05, eval (no.,total): ( 2,129): new dev = 309896
309896.3 :  22599.329092   152.274178   362.760619   199.684202     1.077887     1.334772     1.004378     3.539685     3.766326
  It.  59, fac=  0.00012207, eval (no.,total): ( 1,130): new dev = 309901
  It.  59, fac= 6.10352e-05, eval (no.,total): ( 2,131): new dev = 309896
309896 :  23923.815877   152.273746   362.761610   211.544086     1.077880     1.334774     1.004212     3.539778     3.766315
  It.  60, fac=  0.00012207, eval (no.,total): ( 1,132): new dev = 309901
  It.  60, fac= 6.10352e-05, eval (no.,total): ( 2,133): new dev = 309896
309895.9 :  25408.930540   152.273315   362.762601   224.843349     1.077873     1.334776     1.004046     3.539871     3.766305
  It.  61, fac=  0.00012207, eval (no.,total): ( 1,134): new dev = 309902
  It.  61, fac= 6.10352e-05, eval (no.,total): ( 2,135): new dev = 309896
  It.  61, fac= 3.05176e-05, eval (no.,total): ( 3,136): new dev = 309895
309895.2 :  26247.124267   152.273099   362.763096   232.349973     1.077870     1.334777     1.003963     3.539918     3.766299
  It.  62, fac= 6.10352e-05, eval (no.,total): ( 1,137): new dev = 309895
  It.  62, fac= 3.05176e-05, eval (no.,total): ( 2,138): new dev = 309894
309894.5 :  27141.831895   152.272883   362.763592   240.362999     1.077866     1.334778     1.003880     3.539965     3.766294
  It.  63, fac= 6.10352e-05, eval (no.,total): ( 1,139): new dev = 309895
  It.  63, fac= 3.05176e-05, eval (no.,total): ( 2,140): new dev = 309894
309893.8 :  28098.881078   152.272668   362.764087   248.934643     1.077863     1.334779     1.003797     3.540011     3.766288
  It.  64, fac= 6.10352e-05, eval (no.,total): ( 1,141): new dev = 309894
  It.  64, fac= 3.05176e-05, eval (no.,total): ( 2,142): new dev = 309893
309893.2 :  29125.044814   152.272452   362.764582   258.125589     1.077860     1.334780     1.003714     3.540058     3.766283
  It.  65, fac= 6.10352e-05, eval (no.,total): ( 1,143): new dev = 309894
  It.  65, fac= 3.05176e-05, eval (no.,total): ( 2,144): new dev = 309893
309892.6 :  30227.917357   152.272236   362.765077   268.003879     1.077856     1.334781     1.003631     3.540104     3.766278
  It.  66, fac= 6.10352e-05, eval (no.,total): ( 1,145): new dev = 309893
  It.  66, fac= 3.05176e-05, eval (no.,total): ( 2,146): new dev = 309892
309892 :  31416.307313   152.272021   362.765573   278.648435     1.077853     1.334782     1.003548     3.540151     3.766272
  It.  67, fac= 6.10352e-05, eval (no.,total): ( 1,147): new dev = 309893
  It.  67, fac= 3.05176e-05, eval (no.,total): ( 2,148): new dev = 309892
309891.5 :  32700.352442   152.271805   362.766068   290.150084     1.077849     1.334783     1.003464     3.540197     3.766267
  It.  68, fac= 6.10352e-05, eval (no.,total): ( 1,149): new dev = 309893
  It.  68, fac= 3.05176e-05, eval (no.,total): ( 2,150): new dev = 309891
309891 :  34092.016657   152.271589   362.766563   302.616011     1.077846     1.334784     1.003381     3.540244     3.766262
  It.  69, fac= 6.10352e-05, eval (no.,total): ( 1,151): new dev = 309892
  It.  69, fac= 3.05176e-05, eval (no.,total): ( 2,152): new dev = 309891
309890.6 :  35605.178298   152.271374   362.767059   316.170547     1.077843     1.334785     1.003298     3.540290     3.766256
  It.  70, fac= 6.10352e-05, eval (no.,total): ( 1,153): new dev = 309892
  It.  70, fac= 3.05176e-05, eval (no.,total): ( 2,154): new dev = 309890
309890.3 :  37256.204607   152.271158   362.767554   330.960321     1.077839     1.334786     1.003215     3.540337     3.766251
  It.  71, fac= 6.10352e-05, eval (no.,total): ( 1,155): new dev = 309892
  It.  71, fac= 3.05176e-05, eval (no.,total): ( 2,156): new dev = 309890
309889.9 :  39064.513106   152.270942   362.768049   347.159279     1.077836     1.334787     1.003132     3.540384     3.766246
  It.  72, fac= 6.10352e-05, eval (no.,total): ( 1,157): new dev = 309892
  It.  72, fac= 3.05176e-05, eval (no.,total): ( 2,158): new dev = 309890
309889.7 :  41053.144410   152.270727   362.768544   364.973815     1.077832     1.334788     1.003049     3.540430     3.766240
  It.  73, fac= 6.10352e-05, eval (no.,total): ( 1,159): new dev = 309892
  It.  73, fac= 3.05176e-05, eval (no.,total): ( 2,160): new dev = 309890
309889.5 :  43250.298830   152.270511   362.769039   384.656540     1.077829     1.334789     1.002966     3.540477     3.766235
  It.  74, fac= 6.10352e-05, eval (no.,total): ( 1,161): new dev = 309892
  It.  74, fac= 3.05176e-05, eval (no.,total): ( 2,162): new dev = 309889
309889.4 :  45689.755286   152.270295   362.769535   406.510017     1.077826     1.334790     1.002882     3.540523     3.766230
  It.  75, fac= 6.10352e-05, eval (no.,total): ( 1,163): new dev = 309892
  It.  75, fac= 3.05176e-05, eval (no.,total): ( 2,164): new dev = 309889
309889.4 :  48412.780213   152.270080   362.770030   430.903864     1.077822     1.334791     1.002799     3.540570     3.766224
  It.  76, fac= 6.10352e-05, eval (no.,total): ( 1,165): new dev = 309892
  It.  76, fac= 3.05176e-05, eval (no.,total): ( 2,166): new dev = 309889
  It.  76, fac= 1.52588e-05, eval (no.,total): ( 3,167): new dev = 309889
309889 :  49942.126892   152.269972   362.770277   444.604285     1.077821     1.334792     1.002758     3.540593     3.766222
  It.  77, fac= 3.05176e-05, eval (no.,total): ( 1,168): new dev = 309889
  It.  77, fac= 1.52588e-05, eval (no.,total): ( 2,169): new dev = 309889
309888.7 :  51569.872464   152.269864   362.770525   459.186145     1.077819     1.334792     1.002716     3.540616     3.766219
  It.  78, fac= 3.05176e-05, eval (no.,total): ( 1,170): new dev = 309889
  It.  78, fac= 1.52588e-05, eval (no.,total): ( 2,171): new dev = 309888
309888.4 :  53305.459569   152.269757   362.770772   474.733999     1.077817     1.334793     1.002675     3.540640     3.766216
  It.  79, fac= 3.05176e-05, eval (no.,total): ( 1,172): new dev = 309889
  It.  79, fac= 1.52588e-05, eval (no.,total): ( 2,173): new dev = 309888
309888.1 :  55160.361655   152.269649   362.771020   491.350598     1.077816     1.334794     1.002633     3.540663     3.766214
  It.  80, fac= 3.05176e-05, eval (no.,total): ( 1,174): new dev = 309888
  It.  80, fac= 1.52588e-05, eval (no.,total): ( 2,175): new dev = 309888
309887.8 :  57147.120878   152.269541   362.771268   509.148253     1.077814     1.334794     1.002591     3.540686     3.766211
  It.  81, fac= 3.05176e-05, eval (no.,total): ( 1,176): new dev = 309888
  It.  81, fac= 1.52588e-05, eval (no.,total): ( 2,177): new dev = 309887
309887.5 :  59279.516998   152.269433   362.771515   528.250353     1.077812     1.334795     1.002550     3.540709     3.766208
  It.  82, fac= 3.05176e-05, eval (no.,total): ( 1,178): new dev = 309888
  It.  82, fac= 1.52588e-05, eval (no.,total): ( 2,179): new dev = 309887
309887.2 :  61574.505606   152.269325   362.771763   548.808723     1.077810     1.334795     1.002508     3.540733     3.766205
  It.  83, fac= 3.05176e-05, eval (no.,total): ( 1,180): new dev = 309888
  It.  83, fac= 1.52588e-05, eval (no.,total): ( 2,181): new dev = 309887
309887 :  64050.930921   152.269218   362.772010   570.992088     1.077809     1.334796     1.002467     3.540756     3.766203
  It.  84, fac= 3.05176e-05, eval (no.,total): ( 1,182): new dev = 309888
  It.  84, fac= 1.52588e-05, eval (no.,total): ( 2,183): new dev = 309887
309886.8 :  66731.486957   152.269110   362.772258   595.003642     1.077807     1.334796     1.002425     3.540779     3.766200
  It.  85, fac= 3.05176e-05, eval (no.,total): ( 1,184): new dev = 309887
  It.  85, fac= 1.52588e-05, eval (no.,total): ( 2,185): new dev = 309887
309886.6 :  69641.336868   152.269002   362.772505   621.068672     1.077805     1.334797     1.002383     3.540803     3.766197
  It.  86, fac= 3.05176e-05, eval (no.,total): ( 1,186): new dev = 309887
  It.  86, fac= 1.52588e-05, eval (no.,total): ( 2,187): new dev = 309886
309886.4 :  72811.518758   152.268894   362.772753   649.465054     1.077804     1.334797     1.002342     3.540826     3.766195
  It.  87, fac= 3.05176e-05, eval (no.,total): ( 1,188): new dev = 309887
  It.  87, fac= 1.52588e-05, eval (no.,total): ( 2,189): new dev = 309886
309886.3 :  76276.744442   152.268787   362.773000   680.503534     1.077802     1.334798     1.002300     3.540849     3.766192
  It.  88, fac= 3.05176e-05, eval (no.,total): ( 1,190): new dev = 309887
  It.  88, fac= 1.52588e-05, eval (no.,total): ( 2,191): new dev = 309886
309886.2 :  80080.632820   152.268679   362.773248   714.574591     1.077800     1.334798     1.002259     3.540872     3.766189
  It.  89, fac= 3.05176e-05, eval (no.,total): ( 1,192): new dev = 309887
  It.  89, fac= 1.52588e-05, eval (no.,total): ( 2,193): new dev = 309886
309886.1 :  84274.489339   152.268571   362.773496   752.137483     1.077799     1.334799     1.002217     3.540896     3.766187
  It.  90, fac= 3.05176e-05, eval (no.,total): ( 1,194): new dev = 309887
  It.  90, fac= 1.52588e-05, eval (no.,total): ( 2,195): new dev = 309886
309886.1 :  88919.563724   152.268463   362.773743   793.740452     1.077797     1.334799     1.002175     3.540919     3.766184
  It.  91, fac= 3.05176e-05, eval (no.,total): ( 1,196): new dev = 309887
  It.  91, fac= 1.52588e-05, eval (no.,total): ( 2,197): new dev = 309886
309886 :  94090.756783   152.268356   362.773991   840.053877     1.077795     1.334800     1.002134     3.540942     3.766181
  It.  92, fac= 3.05176e-05, eval (no.,total): ( 1,198): new dev = 309888
  It.  92, fac= 1.52588e-05, eval (no.,total): ( 2,199): new dev = 309886
  It.  92, fac= 7.62939e-06, eval (no.,total): ( 3,200): new dev = 309886
309885.9 :  96987.045527   152.268302   362.774114   865.992148     1.077794     1.334800     1.002113     3.540954     3.766180
  It.  93, fac= 1.52588e-05, eval (no.,total): ( 1,201): new dev = 309886
  It.  93, fac= 7.62939e-06, eval (no.,total): ( 2,202): new dev = 309886
309885.7 :  1.000640e+05 1.522682e+02 3.627742e+02 8.935479e+02 1.077793e+00 1.334800e+00 1.002092e+00 3.540966e+00 3.766179e+00
  It.  94, fac= 1.52588e-05, eval (no.,total): ( 1,203): new dev = 309886
  It.  94, fac= 7.62939e-06, eval (no.,total): ( 2,204): new dev = 309886
309885.5 :  1.033407e+05 1.522682e+02 3.627744e+02 9.228913e+02 1.077793e+00 1.334801e+00 1.002071e+00 3.540977e+00 3.766177e+00
  It.  95, fac= 1.52588e-05, eval (no.,total): ( 1,205): new dev = 309886
  It.  95, fac= 7.62939e-06, eval (no.,total): ( 2,206): new dev = 309885
309885.4 :  1.068350e+05 1.522681e+02 3.627745e+02 9.541827e+02 1.077792e+00 1.334801e+00 1.002051e+00 3.540989e+00 3.766176e+00
  It.  96, fac= 1.52588e-05, eval (no.,total): ( 1,207): new dev = 309886
  It.  96, fac= 7.62939e-06, eval (no.,total): ( 2,208): new dev = 309885
309885.2 :  1.105704e+05 1.522681e+02 3.627746e+02 9.876332e+02 1.077791e+00 1.334801e+00 1.002030e+00 3.541000e+00 3.766175e+00
  It.  97, fac= 1.52588e-05, eval (no.,total): ( 1,209): new dev = 309885
  It.  97, fac= 7.62939e-06, eval (no.,total): ( 2,210): new dev = 309885
309885.1 :  1.145714e+05 1.522680e+02 3.627747e+02 1.023460e+03 1.077790e+00 1.334801e+00 1.002009e+00 3.541012e+00 3.766173e+00
  It.  98, fac= 1.52588e-05, eval (no.,total): ( 1,211): new dev = 309885
  It.  98, fac= 7.62939e-06, eval (no.,total): ( 2,212): new dev = 309885
309884.9 :  1.188665e+05 1.522680e+02 3.627749e+02 1.061920e+03 1.077789e+00 1.334802e+00 1.001988e+00 3.541024e+00 3.766172e+00
  It.  99, fac= 1.52588e-05, eval (no.,total): ( 1,213): new dev = 309885
  It.  99, fac= 7.62939e-06, eval (no.,total): ( 2,214): new dev = 309885
309884.8 :  1.234919e+05 1.522679e+02 3.627750e+02 1.103336e+03 1.077788e+00 1.334802e+00 1.001967e+00 3.541035e+00 3.766171e+00
  It. 100, fac= 1.52588e-05, eval (no.,total): ( 1,215): new dev = 309885
  It. 100, fac= 7.62939e-06, eval (no.,total): ( 2,216): new dev = 309885
309884.7 :  1.284842e+05 1.522679e+02 3.627751e+02 1.148035e+03 1.077788e+00 1.334802e+00 1.001947e+00 3.541047e+00 3.766169e+00
  It. 101, fac= 1.52588e-05, eval (no.,total): ( 1,217): new dev = 309885
  It. 101, fac= 7.62939e-06, eval (no.,total): ( 2,218): new dev = 309885
309884.6 :  1.338873e+05 1.522678e+02 3.627752e+02 1.196410e+03 1.077787e+00 1.334802e+00 1.001926e+00 3.541059e+00 3.766168e+00
  It. 102, fac= 1.52588e-05, eval (no.,total): ( 1,219): new dev = 309885
  It. 102, fac= 7.62939e-06, eval (no.,total): ( 2,220): new dev = 309884
309884.5 :  1.397567e+05 1.522678e+02 3.627754e+02 1.248959e+03 1.077786e+00 1.334803e+00 1.001905e+00 3.541070e+00 3.766167e+00
  It. 103, fac= 1.52588e-05, eval (no.,total): ( 1,221): new dev = 309885
  It. 103, fac= 7.62939e-06, eval (no.,total): ( 2,222): new dev = 309884
309884.4 :  1.461525e+05 1.522677e+02 3.627755e+02 1.306219e+03 1.077785e+00 1.334803e+00 1.001884e+00 3.541082e+00 3.766165e+00
  It. 104, fac= 1.52588e-05, eval (no.,total): ( 1,223): new dev = 309885
  It. 104, fac= 7.62939e-06, eval (no.,total): ( 2,224): new dev = 309884
309884.3 :  1.531469e+05 1.522677e+02 3.627756e+02 1.368834e+03 1.077784e+00 1.334803e+00 1.001863e+00 3.541094e+00 3.766164e+00
  It. 105, fac= 1.52588e-05, eval (no.,total): ( 1,225): new dev = 309885
  It. 105, fac= 7.62939e-06, eval (no.,total): ( 2,226): new dev = 309884
309884.3 :  1.608273e+05 1.522676e+02 3.627757e+02 1.437589e+03 1.077783e+00 1.334804e+00 1.001843e+00 3.541105e+00 3.766163e+00
  It. 106, fac= 1.52588e-05, eval (no.,total): ( 1,227): new dev = 309885
  It. 106, fac= 7.62939e-06, eval (no.,total): ( 2,228): new dev = 309884
309884.2 :  1.692995e+05 1.522675e+02 3.627758e+02 1.513427e+03 1.077782e+00 1.334804e+00 1.001822e+00 3.541117e+00 3.766161e+00
  It. 107, fac= 1.52588e-05, eval (no.,total): ( 1,229): new dev = 309885
  It. 107, fac= 7.62939e-06, eval (no.,total): ( 2,230): new dev = 309884
309884.2 :  1.786868e+05 1.522675e+02 3.627760e+02 1.597453e+03 1.077782e+00 1.334804e+00 1.001801e+00 3.541128e+00 3.766160e+00
  It. 108, fac= 1.52588e-05, eval (no.,total): ( 1,231): new dev = 309885
  It. 108, fac= 7.62939e-06, eval (no.,total): ( 2,232): new dev = 309884
309884.2 :  1.891462e+05 1.522674e+02 3.627761e+02 1.691068e+03 1.077781e+00 1.334804e+00 1.001780e+00 3.541140e+00 3.766159e+00
  It. 109, fac= 1.52588e-05, eval (no.,total): ( 1,233): new dev = 309885
  It. 109, fac= 7.62939e-06, eval (no.,total): ( 2,234): new dev = 309884
  It. 109, fac=  3.8147e-06, eval (no.,total): ( 3,235): new dev = 309884
309884.1 :  1.950067e+05 1.522674e+02 3.627762e+02 1.743520e+03 1.077780e+00 1.334804e+00 1.001770e+00 3.541146e+00 3.766158e+00
  It. 110, fac= 7.62939e-06, eval (no.,total): ( 1,236): new dev = 309884
  It. 110, fac=  3.8147e-06, eval (no.,total): ( 2,237): new dev = 309884
309884 :  2.012353e+05 1.522674e+02 3.627762e+02 1.799264e+03 1.077780e+00 1.334805e+00 1.001759e+00 3.541152e+00 3.766157e+00
  It. 111, fac= 7.62939e-06, eval (no.,total): ( 1,238): new dev = 309884
  It. 111, fac=  3.8147e-06, eval (no.,total): ( 2,239): new dev = 309884
309883.9 :  2.078719e+05 1.522674e+02 3.627763e+02 1.858657e+03 1.077780e+00 1.334805e+00 1.001749e+00 3.541158e+00 3.766157e+00
  It. 112, fac= 7.62939e-06, eval (no.,total): ( 1,240): new dev = 309884
  It. 112, fac=  3.8147e-06, eval (no.,total): ( 2,241): new dev = 309884
309883.8 :  2.149490e+05 1.522673e+02 3.627763e+02 1.921990e+03 1.077779e+00 1.334805e+00 1.001739e+00 3.541163e+00 3.766156e+00
  It. 113, fac= 7.62939e-06, eval (no.,total): ( 1,242): new dev = 309884
  It. 113, fac=  3.8147e-06, eval (no.,total): ( 2,243): new dev = 309884
309883.7 :  2.225171e+05 1.522673e+02 3.627764e+02 1.989714e+03 1.077779e+00 1.334805e+00 1.001728e+00 3.541169e+00 3.766155e+00
  It. 114, fac= 7.62939e-06, eval (no.,total): ( 1,244): new dev = 309884
  It. 114, fac=  3.8147e-06, eval (no.,total): ( 2,245): new dev = 309884
309883.7 :  2.306311e+05 1.522673e+02 3.627765e+02 2.062321e+03 1.077778e+00 1.334805e+00 1.001718e+00 3.541175e+00 3.766155e+00
  It. 115, fac= 7.62939e-06, eval (no.,total): ( 1,246): new dev = 309884
  It. 115, fac=  3.8147e-06, eval (no.,total): ( 2,247): new dev = 309884
309883.6 :  2.393460e+05 1.522673e+02 3.627765e+02 2.140302e+03 1.077778e+00 1.334805e+00 1.001707e+00 3.541181e+00 3.766154e+00
  It. 116, fac= 7.62939e-06, eval (no.,total): ( 1,248): new dev = 309884
  It. 116, fac=  3.8147e-06, eval (no.,total): ( 2,249): new dev = 309884
309883.5 :  2.487353e+05 1.522672e+02 3.627766e+02 2.224313e+03 1.077777e+00 1.334805e+00 1.001697e+00 3.541187e+00 3.766153e+00
  It. 117, fac= 7.62939e-06, eval (no.,total): ( 1,250): new dev = 309884
  It. 117, fac=  3.8147e-06, eval (no.,total): ( 2,251): new dev = 309883
309883.4 :  2.588670e+05 1.522672e+02 3.627767e+02 2.314963e+03 1.077777e+00 1.334805e+00 1.001687e+00 3.541192e+00 3.766153e+00
  It. 118, fac= 7.62939e-06, eval (no.,total): ( 1,252): new dev = 309884
  It. 118, fac=  3.8147e-06, eval (no.,total): ( 2,253): new dev = 309883
309883.4 :  2.698488e+05 1.522672e+02 3.627767e+02 2.413215e+03 1.077777e+00 1.334806e+00 1.001676e+00 3.541198e+00 3.766152e+00
  It. 119, fac= 7.62939e-06, eval (no.,total): ( 1,254): new dev = 309883
  It. 119, fac=  3.8147e-06, eval (no.,total): ( 2,255): new dev = 309883
309883.3 :  2.817780e+05 1.522671e+02 3.627768e+02 2.519938e+03 1.077776e+00 1.334806e+00 1.001666e+00 3.541204e+00 3.766151e+00
  It. 120, fac= 7.62939e-06, eval (no.,total): ( 1,256): new dev = 309883
  It. 120, fac=  3.8147e-06, eval (no.,total): ( 2,257): new dev = 309883
309883.2 :  2.947866e+05 1.522671e+02 3.627768e+02 2.636312e+03 1.077776e+00 1.334806e+00 1.001655e+00 3.541210e+00 3.766151e+00
  It. 121, fac= 7.62939e-06, eval (no.,total): ( 1,258): new dev = 309883
  It. 121, fac=  3.8147e-06, eval (no.,total): ( 2,259): new dev = 309883
309883.2 :  3.090272e+05 1.522671e+02 3.627769e+02 2.763699e+03 1.077775e+00 1.334806e+00 1.001645e+00 3.541216e+00 3.766150e+00
  It. 122, fac= 7.62939e-06, eval (no.,total): ( 1,260): new dev = 309883
  It. 122, fac=  3.8147e-06, eval (no.,total): ( 2,261): new dev = 309883
309883.1 :  3.246832e+05 1.522671e+02 3.627770e+02 2.903741e+03 1.077775e+00 1.334806e+00 1.001635e+00 3.541222e+00 3.766149e+00
  It. 123, fac= 7.62939e-06, eval (no.,total): ( 1,262): new dev = 309883
  It. 123, fac=  3.8147e-06, eval (no.,total): ( 2,263): new dev = 309883
309883.1 :  3.419571e+05 1.522670e+02 3.627770e+02 3.058245e+03 1.077774e+00 1.334806e+00 1.001624e+00 3.541227e+00 3.766149e+00
  It. 124, fac= 7.62939e-06, eval (no.,total): ( 1,264): new dev = 309883
  It. 124, fac=  3.8147e-06, eval (no.,total): ( 2,265): new dev = 309883
309883 :  3.611241e+05 1.522670e+02 3.627771e+02 3.229671e+03 1.077774e+00 1.334806e+00 1.001614e+00 3.541233e+00 3.766148e+00
  It. 125, fac= 7.62939e-06, eval (no.,total): ( 1,266): new dev = 309883
  It. 125, fac=  3.8147e-06, eval (no.,total): ( 2,267): new dev = 309883
309883 :  3.824974e+05 1.522670e+02 3.627771e+02 3.420818e+03 1.077774e+00 1.334807e+00 1.001603e+00 3.541239e+00 3.766147e+00
  It. 126, fac= 7.62939e-06, eval (no.,total): ( 1,268): new dev = 309883
  It. 126, fac=  3.8147e-06, eval (no.,total): ( 2,269): new dev = 309883
309882.9 :  4.064781e+05 1.522670e+02 3.627772e+02 3.635268e+03 1.077773e+00 1.334807e+00 1.001593e+00 3.541245e+00 3.766147e+00
  It. 127, fac= 7.62939e-06, eval (no.,total): ( 1,270): new dev = 309883
  It. 127, fac=  3.8147e-06, eval (no.,total): ( 2,271): new dev = 309883
309882.9 :  4.335604e+05 1.522669e+02 3.627773e+02 3.877436e+03 1.077773e+00 1.334807e+00 1.001583e+00 3.541251e+00 3.766146e+00
  It. 128, fac= 7.62939e-06, eval (no.,total): ( 1,272): new dev = 309883
  It. 128, fac=  3.8147e-06, eval (no.,total): ( 2,273): new dev = 309883
309882.9 :  4.643690e+05 1.522669e+02 3.627773e+02 4.152903e+03 1.077772e+00 1.334807e+00 1.001572e+00 3.541257e+00 3.766145e+00
  It. 129, fac= 7.62939e-06, eval (no.,total): ( 1,274): new dev = 309883
  It. 129, fac=  3.8147e-06, eval (no.,total): ( 2,275): new dev = 309883
309882.8 :  4.997153e+05 1.522669e+02 3.627774e+02 4.468915e+03 1.077772e+00 1.334807e+00 1.001562e+00 3.541262e+00 3.766145e+00
  It. 130, fac= 7.62939e-06, eval (no.,total): ( 1,276): new dev = 309883
  It. 130, fac=  3.8147e-06, eval (no.,total): ( 2,277): new dev = 309883
309882.8 :  5.406735e+05 1.522668e+02 3.627775e+02 4.835067e+03 1.077771e+00 1.334807e+00 1.001551e+00 3.541268e+00 3.766144e+00
  It. 131, fac= 7.62939e-06, eval (no.,total): ( 1,278): new dev = 309883
  It. 131, fac=  3.8147e-06, eval (no.,total): ( 2,279): new dev = 309883
309882.7 :  5.886318e+05 1.522668e+02 3.627775e+02 5.263756e+03 1.077771e+00 1.334807e+00 1.001541e+00 3.541274e+00 3.766143e+00
  It. 132, fac= 7.62939e-06, eval (no.,total): ( 1,280): new dev = 309883
  It. 132, fac=  3.8147e-06, eval (no.,total): ( 2,281): new dev = 309883
309882.7 :  6.454595e+05 1.522668e+02 3.627776e+02 5.771671e+03 1.077771e+00 1.334807e+00 1.001530e+00 3.541280e+00 3.766143e+00
  It. 133, fac= 7.62939e-06, eval (no.,total): ( 1,282): new dev = 309883
  It. 133, fac=  3.8147e-06, eval (no.,total): ( 2,283): new dev = 309883
309882.6 :  7.136806e+05 1.522668e+02 3.627776e+02 6.381348e+03 1.077770e+00 1.334808e+00 1.001520e+00 3.541286e+00 3.766142e+00
  It. 134, fac= 7.62939e-06, eval (no.,total): ( 1,284): new dev = 309883
  It. 134, fac=  3.8147e-06, eval (no.,total): ( 2,285): new dev = 309883
309882.6 :  7.972791e+05 1.522667e+02 3.627777e+02 7.128354e+03 1.077770e+00 1.334808e+00 1.001510e+00 3.541291e+00 3.766141e+00
  It. 135, fac= 7.62939e-06, eval (no.,total): ( 1,286): new dev = 309883
309882.6 :  1.005857e+06 1.522667e+02 3.627778e+02 8.991866e+03 1.077769e+00 1.334808e+00 1.001489e+00 3.541303e+00 3.766140e+00
  It. 136, fac= 1.52588e-05, eval (no.,total): ( 1,287): new dev = 309883
  It. 136, fac= 7.62939e-06, eval (no.,total): ( 2,288): new dev = 309882
309882.2 :  1.337773e+06 1.522666e+02 3.627780e+02 1.195652e+04 1.077768e+00 1.334808e+00 1.001468e+00 3.541315e+00 3.766139e+00
  It. 137, fac= 1.52588e-05, eval (no.,total): ( 1,289): new dev = 309880
309880.4 :  2.512880e+06 1.522665e+02 3.627782e+02 2.244896e+04 1.077766e+00 1.334809e+00 1.001426e+00 3.541338e+00 3.766136e+00
  It. 138, fac= 3.05176e-05, eval (no.,total): ( 1,290): new dev = 309869
309869.3 :  1.082285e+07 1.522663e+02 3.627787e+02 9.660147e+04 1.077763e+00 1.334810e+00 1.001343e+00 3.541385e+00 3.766131e+00
  It. 139, fac= 6.10352e-05, eval (no.,total): ( 1,291):Warning message:
In nls(Biom.2 ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage])),  :
  singular gradient
> ## "fails" but returns at least: singular gradient iteration 126
> m.c2
Nonlinear regression model
  model: Biom.2 ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage]))
   data: biomassTill
      Wm1       Wm2       Wm3        a1        a2        a3        b1        b2 
3.167e+08 1.523e+02 3.628e+02 2.823e+06 1.078e+00 1.335e+00 1.001e+00 3.541e+00 
       b3 
3.766e+00 
 residual sum-of-squares: 309828

Number of iterations till stop: 138 
Achieved convergence tolerance: 0.298
Reason stopped: singular gradient
> 
> ## Robust: not converging in 20 steps (only warning)
> mrob <- nlrob(Biomass ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage])),
+               data = biomassTill, start = m00st, trace=TRUE)
robust iteration 1 
221630.5 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
182287.8 :  318.888617 282.024038 311.254525   1.822548   1.494574   1.129525   2.418270   2.767964   3.476529
163748.1 :  318.805021 288.016685 341.965447   1.786274   1.522607   1.353841   2.642103   2.802773   2.967205
161787.5 :  323.573357 289.845345 349.494212   1.808498   1.529869   1.364095   2.623699   2.785542   3.394001
161775.6 :  323.319523 289.594968 349.575724   1.807366   1.528734   1.361839   2.626092   2.789592   3.442828
161775.6 :  323.400916 289.680030 349.598101   1.807690   1.529108   1.361903   2.625694   2.788483   3.443476
161775.6 :  323.388896 289.658953 349.597815   1.807642   1.529015   1.361902   2.625755   2.788770   3.443488
 --> irls.delta(previous, resid) = 0.408764 -- *not* converged
robust iteration 2 
117522.1 :  323.388896 289.658953 349.597815   1.807642   1.529015   1.361902   2.625755   2.788770   3.443488
116317.6 :  309.839902 261.469373 339.965844   1.757397   1.458788   1.296644   2.681645   2.910159   3.869811
116214.1 :  312.057818 264.525621 344.208980   1.765736   1.468128   1.311145   2.674374   2.896012   3.888938
116213.8 :  311.948386 264.554583 344.099670   1.765259   1.468147   1.310422   2.675235   2.897492   3.898021
116213.8 :  311.969577 264.581811 344.100229   1.765345   1.468280   1.310422   2.675113   2.897016   3.898588
116213.8 :  311.966754 264.576582 344.099891   1.765333   1.468254   1.310420   2.675129   2.897124   3.898638
 --> irls.delta(previous, resid) = 0.0748333 -- *not* converged
robust iteration 3 
114540.4 :  311.966754 264.576582 344.099891   1.765333   1.468254   1.310420   2.675129   2.897124   3.898638
114446.9 :  308.438441 262.497626 343.287098   1.752480   1.471376   1.297822   2.688719   2.878705   4.002375
114446.4 :  308.776840 262.246114 343.461736   1.753803   1.470158   1.298522   2.687043   2.883450   4.008064
114446.4 :  308.742957 262.303773 343.453149   1.753664   1.470445   1.298481   2.687258   2.882320   4.008934
114446.4 :  308.747653 262.290277 343.453069   1.753683   1.470377   1.298480   2.687229   2.882590   4.009003
 --> irls.delta(previous, resid) = 0.0199464 -- *not* converged
robust iteration 4 
114058.3 :  308.747653 262.290277 343.453069   1.753683   1.470377   1.298480   2.687229   2.882590   4.009003
114049.4 :  306.724293 263.388710 343.271943   1.746941   1.478768   1.294858   2.692571   2.863133   4.035404
114049.4 :  306.830584 263.269324 343.297939   1.747354   1.478143   1.294968   2.691987   2.866724   4.036535
114049.4 :  306.818658 263.323901 343.296496   1.747305   1.478412   1.294961   2.692062   2.865754   4.036697
114049.4 :  306.820250 263.311861 343.296481   1.747312   1.478352   1.294961   2.692053   2.865985   4.036711
 --> irls.delta(previous, resid) = 0.00614414 -- *not* converged
robust iteration 5 
113640.7 :  306.820250 263.311861 343.296481   1.747312   1.478352   1.294961   2.692053   2.865985   4.036711
113639.3 :  304.782222 263.797060 343.188025   1.740445   1.482136   1.293735   2.697783   2.858173   4.043971
113639.3 :  304.894400 263.746569 343.195916   1.740884   1.481876   1.293769   2.697154   2.859536   4.044165
113639.3 :  304.882014 263.767319 343.195542   1.740833   1.481978   1.293767   2.697234   2.859171   4.044200
113639.3 :  304.883651 263.762625 343.195542   1.740840   1.481955   1.293767   2.697224   2.859259   4.044203
 --> irls.delta(previous, resid) = 0.00251115 -- *not* converged
robust iteration 6 
113259 :  304.883651 263.762625 343.195542   1.740840   1.481955   1.293767   2.697224   2.859259   4.044203
113258.6 :  302.936683 263.822112 343.114797   1.734292   1.483014   1.293296   2.702685   2.857353   4.046440
113258.6 :  303.038937 263.811576 343.117926   1.734694   1.482960   1.293310   2.702095   2.857649   4.046456
113258.6 :  303.027698 263.816161 343.117803   1.734647   1.482983   1.293309   2.702170   2.857569   4.046464
 --> irls.delta(previous, resid) = 0.00153445 -- *not* converged
robust iteration 7 
113007.7 :  303.027698 263.816161 343.117803   1.734647   1.482983   1.293309   2.702170   2.857569   4.046464
113007.4 :  301.300725 263.748720 343.067233   1.728976   1.483034   1.293115   2.706517   2.857682   4.047230
113007.4 :  301.375177 263.752332 343.068571   1.729269   1.483052   1.293121   2.706072   2.857629   4.047220
 --> irls.delta(previous, resid) = 0.00131597 -- *not* converged
robust iteration 8 
112867.9 :  301.375177 263.752332 343.068571   1.729269   1.483052   1.293121   2.706072   2.857629   4.047220
112867.6 :  299.824592 263.677260 343.040842   1.724307   1.482853   1.293039   2.709502   2.858166   4.047505
112867.6 :  299.877618 263.683001 343.041424   1.724515   1.482881   1.293041   2.709173   2.858052   4.047497
 --> irls.delta(previous, resid) = 0.00127036 -- *not* converged
robust iteration 9 
112799.9 :  299.877618 263.683001 343.041424   1.724515   1.482881   1.293041   2.709173   2.858052   4.047497
112799.6 :  298.449772 263.630148 343.027946   1.720046   1.482687   1.293007   2.711958   2.858526   4.047605
112799.6 :  298.488313 263.634709 343.028194   1.720195   1.482710   1.293008   2.711711   2.858431   4.047600
 --> irls.delta(previous, resid) = 0.00126057 -- *not* converged
robust iteration 10 
112770.7 :  298.488313 263.634709 343.028194   1.720195   1.482710   1.293008   2.711711   2.858431   4.047600
112770.5 :  297.132062 263.604118 343.022351   1.716005   1.482580   1.292994   2.714140   2.858737   4.047640
112770.5 :  297.162664 263.606944 343.022450   1.716123   1.482594   1.292995   2.713938   2.858677   4.047638
 --> irls.delta(previous, resid) = 0.00125903 -- *not* converged
robust iteration 11 
112760.1 :  297.162664 263.606944 343.022450   1.716123   1.482594   1.292995   2.713938   2.858677   4.047638
112759.8 :  295.846335 263.591433 343.020257   1.712080   1.482521   1.292990   2.716198   2.858845   4.047651
112759.8 :  295.872968 263.592943 343.020294   1.712182   1.482528   1.292990   2.716018   2.858813   4.047650
 --> irls.delta(previous, resid) = 0.00125948 -- *not* converged
robust iteration 12 
112757.3 :  295.872968 263.592943 343.020294   1.712182   1.482528   1.292990   2.716018   2.858813   4.047650
112757 :  294.579860 263.585960 343.019654   1.708215   1.482492   1.292988   2.718210   2.858895   4.047653
112757 :  294.604592 263.586673 343.019665   1.708309   1.482496   1.292988   2.718039   2.858879   4.047653
 --> irls.delta(previous, resid) = 0.00126039 -- *not* converged
robust iteration 13 
112757.3 :  294.604592 263.586673 343.019665   1.708309   1.482496   1.292988   2.718039   2.858879   4.047653
112757.1 :  293.326874 263.583935 343.019590   1.704384   1.482480   1.292988   2.720209   2.858914   4.047653
112757.1 :  293.350662 263.584232 343.019592   1.704476   1.482481   1.292988   2.720042   2.858908   4.047653
 --> irls.delta(previous, resid) = 0.00126137 -- *not* converged
robust iteration 14 
112758.1 :  293.350662 263.584232 343.019592   1.704476   1.482481   1.292988   2.720042   2.858908   4.047653
112757.8 :  292.085067 263.583367 343.019673   1.700579   1.482475   1.292988   2.722211   2.858920   4.047652
112757.8 :  292.108310 263.583471 343.019672   1.700669   1.482476   1.292988   2.722045   2.858918   4.047652
 --> irls.delta(previous, resid) = 0.0012623 -- *not* converged
robust iteration 15 
112758.9 :  292.108310 263.583471 343.019672   1.700669   1.482476   1.292988   2.722045   2.858918   4.047652
112758.6 :  290.853647 263.583322 343.019762   1.696796   1.482474   1.292988   2.724220   2.858922   4.047652
112758.6 :  290.876483 263.583346 343.019761   1.696884   1.482474   1.292988   2.724054   2.858921   4.047652
 --> irls.delta(previous, resid) = 0.00126316 -- *not* converged
robust iteration 16 
112759.6 :  290.876483 263.583346 343.019761   1.696884   1.482474   1.292988   2.724054   2.858921   4.047652
112759.3 :  289.632403 263.583413 343.019824   1.693034   1.482474   1.292989   2.726237   2.858921   4.047652
112759.3 :  289.654872 263.583412 343.019824   1.693121   1.482474   1.292989   2.726072   2.858921   4.047652
 --> irls.delta(previous, resid) = 0.00126394 -- *not* converged
robust iteration 17 
112760.1 :  289.654872 263.583412 343.019824   1.693121   1.482474   1.292989   2.726072   2.858921   4.047652
112759.8 :  288.421309 263.583503 343.019860   1.689293   1.482474   1.292989   2.728263   2.858921   4.047651
112759.8 :  288.443414 263.583497 343.019859   1.689379   1.482474   1.292989   2.728097   2.858921   4.047651
 --> irls.delta(previous, resid) = 0.00126464 -- *not* converged
robust iteration 18 
112760.5 :  288.443414 263.583497 343.019859   1.689379   1.482474   1.292989   2.728097   2.858921   4.047651
112760.2 :  287.220354 263.583567 343.019878   1.685574   1.482474   1.292989   2.730295   2.858920   4.047651
112760.2 :  287.242096 263.583562 343.019877   1.685659   1.482474   1.292989   2.730129   2.858920   4.047651
 --> irls.delta(previous, resid) = 0.00126527 -- *not* converged
robust iteration 19 
112760.9 :  287.242096 263.583562 343.019877   1.685659   1.482474   1.292989   2.730129   2.858920   4.047651
112760.6 :  286.029526 263.583602 343.019886   1.681877   1.482475   1.292989   2.732334   2.858920   4.047651
112760.6 :  286.050898 263.583598 343.019885   1.681960   1.482475   1.292989   2.732169   2.858920   4.047651
 --> irls.delta(previous, resid) = 0.00126582 -- *not* converged
robust iteration 20 
112761.2 :  286.050898 263.583598 343.019885   1.681960   1.482475   1.292989   2.732169   2.858920   4.047651
112760.9 :  284.848779 263.583620 343.019888   1.678201   1.482475   1.292989   2.734381   2.858920   4.047651
112760.9 :  284.869786 263.583616 343.019889   1.678283   1.482475   1.292989   2.734215   2.858920   4.047651
 --> irls.delta(previous, resid) = 0.0012663 -- *not* converged
Warning message:
In nlrob(Biomass ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage])),  :
  failed to converge in 20 steps
> try(## now: singular gradient in nls
+ mr.2 <- nlrob(Biom.2  ~ Wm[Tillage] * (-expm1(-(DVS/a[Tillage])^b[Tillage])),
+               data = biomassTill, start = m00st, trace=TRUE)
+ )
robust iteration 1 
254879.8 :  300.0 300.0 300.0   1.5   1.5   1.5   2.2   2.2   2.2
205968 :  378.516859 187.120773 304.339101   1.987966   1.126072   1.302035   1.656035   2.712645   2.854579
202969.7 :  561.095679 185.138318 316.702822   2.992485   1.132649   1.322806   1.398006   2.907330   2.984323
202028.3 :  723.208482 184.788935 318.927257   3.884849   1.133846   1.325783   1.334008   2.947067   3.011013
201425.8 :  882.261484 184.626682 319.963858   4.742891   1.134403   1.327119   1.301686   2.965931   3.023689
201143.5 :  1142.369171  184.470136  320.965448    6.118310    1.134940    1.328389    1.269096    2.984308    3.036041
200842.6 :  1381.272537  184.394593  321.449392    7.350053    1.135200    1.328993    1.252659    2.993255    3.042058
200622.7 :  1749.191215  184.320360  321.925218    9.205842    1.135454    1.329582    1.236119    3.002085    3.047996
200482.1 :  2370.246259  184.247408  322.393076   12.254016    1.135705    1.330156    1.219472    3.010797    3.053857
200374.3 :  3569.423864  184.175712  322.853112   17.937690    1.135951    1.330716    1.202709    3.019393    3.059642
200079.1 :  6427.483336  184.105245  323.305470   30.877341    1.136192    1.331263    1.185814    3.027873    3.065350
198772.3 :  16191.115838   184.035981   323.750289    72.441367     1.136430     1.331797     1.168736     3.036238     3.070983
197021.2 :  1.489554e+05 1.838998e+02 3.246251e+02 5.923347e+02 1.136896e+00 1.332840e+00 1.133820e+00 3.052741e+00 3.082100e+00
192786.5 :  1.280166e+07 1.837682e+02 3.254709e+02 4.511187e+04 1.137346e+00 1.333833e+00 1.097289e+00 3.068791e+00 3.092921e+00
Error in nls(formula, data = data, start = start, algorithm = algorithm,  : 
  singular gradient
> 
> ## Compare coeffs:
> rbind(c.true = unlist(m1.st),
+       cl0 = coef(m.c00),
+       cl = coef(m.cl), rob = coef(mrob),
+       c2 = coef(m.c2))#, r.2 = coef(mr.2))
                Wm1       Wm2      Wm3           a1        a2       a3       b1
c.true 2.198000e+02 265.90000 343.4000 1.461000e+00 1.4930000 1.294000 2.889000
cl0    5.795709e+02 -65.27969 343.0101 3.036982e+00 0.1953332 1.132643 0.149942
cl     4.899173e+02 615.52802 380.0640 2.342740e+00 2.1896022 1.371278 2.397332
rob    2.848698e+02 263.58362 343.0199 1.678283e+00 1.4824746 1.292989 2.734215
c2     3.166712e+08 152.26588 362.7797 2.823049e+06 1.0777562 1.334812 1.001177
             b2       b3
c.true 2.838000 4.046000
cl0    3.669756 3.655383
cl     2.594862 3.594968
rob    2.858920 4.047651
c2     3.541478 3.766120
> ## Compare  fit
> 
> ## Now for plotting --- nice would be xyplot, but I don't easily see how:
> 
> 
> (yl2  <- range(biomassTill[,"Biom.2"]))
[1]   0.9085065 513.6421369
> (ylim <- range(biomassTill[,"Biomass"]))# --> *not* showing the two outliers!
[1]   0.5412327 579.6046045
> ## or even a bit more robustly:
> ## sfsmisc::rrange(biomassTill[,"Biom.2"]) ##-> -201.3064  394.0914
> 
> ## using global data + fits from above
> p.biomass.fits <- function(ylim = c(-200, 400), n = 257, f.DVS = 0.1,
+                            leg.txt =
+                                c(outer(c("nls()   ", "nlrob()"),
+                                        c("", "[ + 2 outl.]"), paste)),
+                            col = c("blue2","blue3","tomato","red3"),
+                            lty = c(2,1,2,1),
+                            lwd = 2)
+ {
+     ## more and equispaced DVS values for nice plot:
+     rr <- extendrange(biomassTill[,"DVS"], f=f.DVS)
+     bbDVS <- seq(rr[1], rr[2], length = n)
+     b.Till <- biomassTill[,"Tillage"]
+     nP <- nlevels(b.Till) # == 3
+     m <- length(leg.txt)
+     col <- rep_len(col, m)
+     lwd <- rep_len(lwd, m)
+     lty <- rep_len(lty, m)
+     ## Prefer xyplot() - this is ugly but works (and tests predict(*, <subset>)):
+     op <- par(mfrow = c(nP,1), mar = .1 + c(3, 3, 2, 1), mgp = c(1.25, 0.6, 0))
+     on.exit(par(op))
+     for(lev in levels(b.Till)) {
+         cat(lev,":\n--------\n")
+         dsub <- subset(biomassTill, Tillage == lev)
+         plot(Biom.2 ~ DVS, data = dsub, ylim=ylim, main = paste("Tillage = ", lev))
+         grid()
+         dd <- data.frame(Tillage = factor(rep.int(lev, n), levels=levels(b.Till)),
+                          DVS = bbDVS)
+         lines(predict(m.cl, dd) ~ DVS, data=dd, col=col[1], lty=lty[1], lwd=lwd[1])
+         lines(predict(mrob, dd) ~ DVS, data=dd, col=col[2], lty=lty[2], lwd=lwd[2])
+         lines(predict(m.c2, dd) ~ DVS, data=dd, col=col[3], lty=lty[3], lwd=lwd[3])
+         ## lines(predict(mr.2, dd) ~ DVS, data=dd, col=col[4], lty=lty[4], lwd=lwd[4])
+         if(lev == "CA-")
+             legend("top", leg.txt, col = col, lty=lty, lwd=lwd,
+                    inset=.02, bg = "gray96") #, bty="n")
+     }
+ }
> 
> ## showing all data points:
> p.biomass.fits(ylim = yl2)
CA- :
--------
CA+ :
--------
CT :
--------
> ## more interesting:
> p.biomass.fits()
CA- :
--------
CA+ :
--------
CT :
--------
> 
> 
> cat('Time elapsed: ', proc.time(),'\n') # for ``statistical reasons''
Time elapsed:  4.097 0.249 4.702 0.002 0.005 
> 
> proc.time()
   user  system elapsed 
  4.100   0.254   4.702 
