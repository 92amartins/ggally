% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/ggnet2.R
\name{ggnet2}
\alias{ggnet2}
\title{ggnet2 - Plot a network with ggplot2}
\usage{
ggnet2(net, mode = "fruchtermanreingold", layout.par = NULL, alpha = 1,
  color = "grey75", palette = NULL, color.palette = palette,
  color.legend = NA, shape = 19, size = 9, max_size = 9,
  size.cut = FALSE, size.min = NA, size.max = NA, size.legend = NA,
  label = FALSE, label.color = "black", label.size = max_size/2,
  label.trim = FALSE, node.alpha = alpha, node.color = color,
  node.label = label, node.shape = shape, node.size = size, na.rm = NA,
  edge.alpha = 1, edge.color = "grey50", edge.lty = "solid",
  edge.size = 0.25, edge.label = NULL, edge.label.color = label.color,
  edge.label.fill = "white", edge.label.size = max_size/2, arrow.size = 0,
  arrow.type = "closed", legend.size = 9, legend.position = "right", ...)
}
\arguments{
\item{net}{an object of class \code{igraph} or \code{network}, or any object
that can be coerced to the \code{network} class, such as an adjacency or
incidence matrix, or an edge list.
See \link[network:edgeset.constructors]{edgeset.constructors} and
\link[network:network]{network} for details.
If the object is of class \code{igraph}, the
\link[intergraph:asNetwork]{intergraph} package is used to convert it to
class \code{network}.}

\item{mode}{a placement method from those provided in the
\link[sna:gplot.layout]{sna} package. Defaults to the Fruchterman-Reingold
force-directed algorithm.
If \code{mode} is set to two numeric vertex attributes of \code{net},
these are used instead.}

\item{layout.par}{options to the placement method, as listed in
\link[sna]{gplot.layout}.}

\item{alpha}{the level of transparency for the edges and nodes.
Defaults to \code{1}.}

\item{color}{the color for the nodes, which might be a single value, a vertex
attribute, or a vector of values.
Defaults to \code{grey75}.}

\item{palette}{the palette to color the nodes, when \code{color} is not a
color value or a vector of color values. Accepts named vectors of color
values, or any ColorBrewer palette name available through
\link[RColorBrewer:brewer.pal]{brewer.pal}.
Defaults to \code{NULL}.}

\item{color.palette}{see \code{palette}}

\item{color.legend}{the name to assign to the legend created by
\code{palette}.
Defaults to \code{""} (no name).}

\item{shape}{the shape of the nodes, which might be a single value, a vertex
attribute, or a vector of values.
Defaults to \code{19} (solid circle).}

\item{size}{the size of the nodes, which might be a single value, a vertex
attribute, or a vector of values. Also accepts \code{"indegree"},
\code{"outdegree"}, \code{"degree"} or \code{"freeman"} to size the nodes by
their unweighted degree centrality (\code{"degree"} and \code{"freeman"} are
equivalent). See \link[sna:degree]{degree} for details.
Defaults to \code{9}.}

\item{max_size}{the \emph{maximum} size of the node when \code{size} produces
nodes of different sizes.
Defaults to \code{9}.}

\item{size.cut}{whether to cut the size of the nodes into a certain number of
quantiles. Accepts \code{TRUE}, which tries to cut the sizes into quartiles,
or any positive numeric value. If the size of the nodes do not contain the
specified number of quantiles, the largest possible number is used. See
\link[stats:quantile]{quantile} and \link[base:cut]{cut} for details.
Defaults to \code{FALSE} (does nothing).}

\item{size.min}{whether to subset the network to nodes with a minimum size,
based on the values of \code{size}.
Defaults to \code{0} (preserves all nodes).}

\item{size.max}{whether to subset the network to nodes with a maximum size,
based on the values of \code{size}.
Defaults to \code{0} (preserves all nodes).}

\item{size.legend}{the name to assign to the legend created by
\code{size}.
Defaults to \code{""} (no name).}

\item{label}{whether to label the nodes. If set to \code{TRUE}, nodes are
labeled with their vertex names. If set to a vector that contains as many
elements as there are nodes in \code{net}, nodes are labeled with these. If
set to any other vector of values, the nodes are labeled only if their
vertex names match one of these values.
Defaults to \code{FALSE} (no labels).}

\item{label.color}{the color for the node labels.
Defaults to \code{"black"}.}

\item{label.size}{the size for the node labels.
Defaults to \code{max_size / 2} (half the node size or maximum node size),
which defaults to \code{4.5}.}

\item{label.trim}{whether to trim the node labels to a fixed-length
substring. See \link[base:substr]{substr} for details.
Defaults to \code{FALSE} (does nothing).}

\item{node.alpha}{see \code{alpha}}

\item{node.color}{see \code{color}}

\item{node.label}{see \code{label}}

\item{node.shape}{see \code{shape}}

\item{node.size}{see \code{size}}

\item{na.rm}{whether to subset the network to nodes that are not missing a
given vertex attribute. If set to any vertex attribute of \code{net}, the
nodes for which this attribute is \code{NA} will be removed.
Defaults to \code{NA} (does nothing).}

\item{edge.alpha}{the level of transparency of the edges.
Defaults to the value of \code{alpha}, which defaults to \code{1}.}

\item{edge.color}{the color of the edges, as a color value, a vector of color
values, or an edge attribute.
Defaults to \code{"grey50"}.}

\item{edge.lty}{the linetype of the edges, as a linetype value, a vector of
linetype values, or an edge attribute.
Defaults to \code{"solid"}.}

\item{edge.size}{the size of the edges, as a numeric value, a vector of
numeric values, or an edge attribute.
Defaults to \code{0.25}.}

\item{edge.label}{a vector of labels to plot at the middle of the edges.
Defaults to \code{NULL} (no edge labels).}

\item{edge.label.color}{the color of the edge labels.
Defaults to \code{label.color}, which defaults to \code{"black"}.}

\item{edge.label.fill}{the background color of the edge labels.
Defaults to \code{"white"}.}

\item{edge.label.size}{the size of the edge labels.
Defaults to \code{max_size / 2}, which defaults to \code{4.5}.}

\item{arrow.size}{the size of the arrows for directed network edges, in
points. See \link[grid:arrow]{arrow} for details.
Defaults to \code{0} (no arrows).}

\item{arrow.type}{the type of the arrows for directed network edges. See
\link[grid:arrow]{arrow} for details.}

\item{legend.size}{the size of the legend symbols and text.
Defaults to \code{9}.}

\item{legend.position}{the location of the plot legend(s). Accepts all
\code{legend.position} values supported by \link[ggplot2:theme]{theme}.
Defaults to \code{"right"}.}

\item{...}{other arguments passed to the \code{geom_text} object that sets
the node labels. See \link[ggplot2:geom_text]{geom_text} for details.}
}
\description{
Function for making a network plot from an object of class \code{network} or
\code{igraph}, using ggplot2, with additional control over graphical
parameters that are not supported by the \link{ggnet} function.
Please visit \url{http://github.com/briatte/ggnet} for the latest development
and descriptions about ggnet2, and \url{https://briatte.github.io/ggnet} for
a vignette that contains many examples and explanations.
}
\details{
The degree centrality measures that can be produced through the
\code{size} argument will take the directedness of the network into account,
but will be unweighted. To compute weighted network measures, see the
\link[tnet]{tnet} package by Tore Opsahl.
}
\examples{
if(require(network)){
# make toy random network
x                  <- 10
ndyads             <- x * (x - 1)
density            <- x / ndyads
nw.mat             <- matrix(0, nrow = x, ncol = x)
dimnames(nw.mat)   <- list(1:x, 1:x)
nw.mat[row(nw.mat) != col(nw.mat)] <- runif(ndyads) < density
nw.mat
rnd <- network::network(nw.mat)
rnd

# random network
ggnet2(rnd, label = TRUE)

# random groups
rnd \%v\% "group" <- sample(LETTERS[1:3], 10, replace = TRUE)
ggnet2(rnd, color = "group", palette = "Set2")
}
}
\author{
Moritz Marbach and Francois Briatte
}
\seealso{
\link{ggnet} in this package,
\link[sna:gplot]{gplot} in the \link[sna]{sna} package,
\link[network:plot.network]{plot.network} in the \link[network]{network} package
}

