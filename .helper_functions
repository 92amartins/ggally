covr_shiny_app:
  cov <- covr::package_coverage()
  covr::shine(cov)
covr_zero_coverage:
  zero <- function(...) {
    # check out the link below to work most efficiently
    # https://codecov.io/github/ggobi/ggally/features/suggestions?ref=dev
    cov <- covr::package_coverage(...)
    covr::zero_coverage(cov)
  }
  zero()
lintr_package:
  # remove line in "linters:" above
  devtools::lint()
  # fix errors,
  # repeat until no errors
lintr_code_to_create_lintr:
  library(magrittr)
  library(dplyr)
  lintr::lint_package() %>%
    as.data.frame %>%
    group_by(linter) %>%
    tally(sort = TRUE) %$%
    sprintf("linters: with_defaults(\n    %s\n    NULL\n  )\n",
            paste0(linter, " = NULL, # ", n, collapse="\n    ")) %>%
    cat()
test_package:
  tp <- function(package = "./", ...) {
    devtools::document(package)
    devtools::test(package, ...)
  }
  tp()
test_file:
  tf <- function(file = "gg-plots", package = "./", spacer = "-") {
    devtools::load_all(package)
    testthat::test_file(file.path(package, "tests", "testthat", paste0("test", spacer, file, ".R")))
  }
  tf("zzz_ggpairs")
knit_vignettes:
  devtools::document(); packagedocs::build_vignettes()
knit_index:
  devtools::document(); packagedocs::index_render()
knit_rd:
  devtools::document(); packagedocs::rd_render()
build_win:
  devtools::build_win(version = c("R-release", "R-devel"))
reverse_depends:
  if (packageVersion("devtools") <= "1.12.0") devtools::install_github("hadley/devtools")
  source("https://bioconductor.org/biocLite.R")
  dir.create(file.path("revdep", "lib"), recursive = TRUE, showWarnings = FALSE)
  options("Ncpus" = 4, "devtools.revdep.libpath" = normalizePath(file.path("revdep", "lib")))
  devtools::revdep_check()
  # devtools::revdep_check_resume()
  # devtools::revdep_check_reset()
  devtools::revdep_check_save_summary()
  devtools::revdep_check_print_problems()
reverse_depends_email:
  devtools:::revdep_email(date = "Nov 4th alongside ggplot2's release", version = "1.3.0", author = "Barret", draft = TRUE, only_problems = FALSE)
