covr_shiny_app:
  cov <- covr::package_coverage()
  covr::shine(cov)
covr_zero_coverage:
  zero <- function(...) {
    cov <- covr::package_coverage(...)
    covr::zero_coverage(cov)
  }
  zero()
lintr_package:
  # remove line in "linters:" above
  lintr::lint_package("./")
  # fix errors,
  # repeat until no errors
lintr_code_to_create_lintr:
  library(magrittr)
  library(dplyr)
  lintr::lint_package() %>%
    as.data.frame %>%
    group_by(linter) %>%
    tally(sort = TRUE) %$%
    sprintf("linters: with_defaults(\n    %s\n    NULL\n  )\n",
            paste0(linter, " = NULL, # ", n, collapse="\n    ")) %>%
    cat()
test_package:
  tp <- function(package = "./", ...) {
    devtools::document(package)
    devtools::load_all(package)
    testthat::test_package(devtools::as.package(package)$package, ...)
  }
  tp()
test_file:
  tf <- function(file = "gg-plots") {
    testthat::test_file(file.path("tests", "testthat", paste0("test-", file, ".R")))
  }
  tf("gg-plots")
  tf("ggpairs")
